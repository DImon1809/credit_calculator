{"version":3,"file":"static/js/376.8e4e9bd0.chunk.js","mappings":"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","sources":["components/card/Card.tsx","components/card-wrapper/CardWrapper.tsx","components/user-forms/desription-form/DescriptionForm.tsx","components/UI/form-input/FormInput.tsx","components/UI/form-button/FormButton.tsx","components/user-forms/auth-form/AuthForm.tsx","components/user-forms/register-form/RegisterForm.tsx","components/user-forms/forms-wrapper/FormsWrapper.tsx","pages/personal-account/PersonalAccount.tsx"],"sourcesContent":["import { FC, useState, useEffect } from \"react\";\r\n\r\nimport edit from \"../../assets/ui/edit.webp\";\r\nimport drop from \"../../assets/ui/drop.webp\";\r\n\r\nimport \"./Card.scss\";\r\n\r\nexport interface ICard {\r\n  count: number;\r\n  amount: number;\r\n  termInMonth: number;\r\n  monthlyPayment: number;\r\n  delay: number;\r\n  isLeft: boolean;\r\n}\r\n\r\nconst Card: FC<ICard> = ({\r\n  count,\r\n  amount,\r\n  termInMonth,\r\n  monthlyPayment,\r\n  delay,\r\n  isLeft,\r\n}) => {\r\n  const [isMove, setIsMove] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (!delay) return setIsMove(true);\r\n\r\n    if (delay)\r\n      setTimeout(() => {\r\n        setIsMove(true);\r\n      }, delay);\r\n  }, [delay]);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        isLeft\r\n          ? isMove\r\n            ? \"card-left move\"\r\n            : \"card-left\"\r\n          : isMove\r\n          ? \"card-right move\"\r\n          : \"card-right\"\r\n      }\r\n    >\r\n      <div className=\"card-head\">\r\n        <div className=\"card-head-text\">\r\n          <div className=\"card-count\">\r\n            <p>{count}.</p>\r\n          </div>\r\n\r\n          <div className=\"card-mounthly\">\r\n            <p>Под {monthlyPayment} %.</p>\r\n          </div>\r\n          <div className=\"card-term\">\r\n            <p>На {termInMonth} месяца.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card-body\">\r\n        <div className=\"card-amount\">\r\n          <p>Кредит на сумму {amount / 1000} тыс. ₽</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card-item-wrapper\">\r\n        <div className=\"card-edit\">\r\n          <img src={edit} alt=\"#\" />\r\n        </div>\r\n        <div className=\"card-drop\">\r\n          <img src={drop} alt=\"#\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { FC } from \"react\";\r\n\r\nimport Card from \"../card/Card\";\r\n\r\nimport \"./CardWrapper.scss\";\r\n\r\nconst cards = [\r\n  {\r\n    count: 1,\r\n    amount: 4000000,\r\n    termInMonth: 2,\r\n    monthlyPayment: 12,\r\n  },\r\n\r\n  { count: 2, amount: 4000000, termInMonth: 2, monthlyPayment: 12 },\r\n\r\n  { count: 3, amount: 4000000, termInMonth: 2, monthlyPayment: 12 },\r\n\r\n  { count: 4, amount: 4000000, termInMonth: 2, monthlyPayment: 12 },\r\n\r\n  { count: 5, amount: 4000000, termInMonth: 2, monthlyPayment: 12 },\r\n\r\n  { count: 6, amount: 4000000, termInMonth: 2, monthlyPayment: 12 },\r\n\r\n  // { count: 7, amount: 4000000, termInMonth: 2, monthlyPayment: 12 },\r\n\r\n  // { count: 8, amount: 4000000, termInMonth: 2, monthlyPayment: 12 },\r\n];\r\n\r\nconst CardWrapper: FC = () => {\r\n  return (\r\n    <div className={cards.length > 6 ? \"card-wrapper long\" : \"card-wrapper\"}>\r\n      <div className=\"card-wrapper-left\">\r\n        {cards.map((card, index) => {\r\n          if (index % 2 === 0) {\r\n            return (\r\n              <Card\r\n                key={index + 1}\r\n                count={card.count}\r\n                amount={card.amount}\r\n                termInMonth={card.termInMonth}\r\n                monthlyPayment={card.monthlyPayment}\r\n                delay={index < 6 ? (index === 0 ? 100 : (index / 2) * 150) : 0}\r\n                isLeft={true}\r\n              />\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n      <div className=\"card-wrapper-right\">\r\n        {cards.map((card, index) => {\r\n          if (index % 2 !== 0) {\r\n            return (\r\n              <Card\r\n                key={index + 1}\r\n                count={card.count}\r\n                amount={card.amount}\r\n                termInMonth={card.termInMonth}\r\n                monthlyPayment={card.monthlyPayment}\r\n                delay={\r\n                  index < 6\r\n                    ? index === 1\r\n                      ? 100\r\n                      : Math.ceil(index / 2) * 150\r\n                    : 0\r\n                }\r\n                isLeft={false}\r\n              />\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardWrapper;\r\n","import { FC, useState, useEffect } from \"react\";\r\n\r\nimport \"./DescriptionForm.scss\";\r\n\r\nimport { IForms } from \"../forms-wrapper/FormsWrapper\";\r\n\r\nconst DescriptionForm: FC<IForms> = ({ slideMove, changeSlideMove }) => {\r\n  const [directionName, setDiractionName] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (slideMove === \"description\") return setDiractionName(\"\");\r\n\r\n    if (slideMove === \"registration\") return setDiractionName(\"left\");\r\n\r\n    if (slideMove === \"authorization\") return setDiractionName(\"right\");\r\n  }, [slideMove]);\r\n\r\n  return (\r\n    <div className={`description-form ${directionName}`}>\r\n      <div className=\"description-title\">\r\n        <h3>Описание</h3>\r\n      </div>\r\n\r\n      <div className=\"description\">\r\n        <p>\r\n          Привет! В данном разделе ты найдешь информацию по своим кредитам, а\r\n          также возможность их удаления и редактирования.\r\n        </p>\r\n      </div>\r\n      <div className=\"cont-description\">\r\n        <p>\r\n          Прежде чем продолжить,{\" \"}\r\n          <span\r\n            className=\"to-auth\"\r\n            onClick={() => changeSlideMove(\"authorization\")}\r\n          >\r\n            войди в аккаунт\r\n          </span>{\" \"}\r\n          или{\" \"}\r\n          <span\r\n            className=\"to-register\"\r\n            onClick={() => changeSlideMove(\"registration\")}\r\n          >\r\n            зарегистрируйся\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DescriptionForm;\r\n","import { FC } from \"react\";\r\n\r\nimport { FiEye } from \"react-icons/fi\";\r\nimport { FiEyeOff } from \"react-icons/fi\";\r\n\r\nimport \"./FormInput.scss\";\r\n\r\nexport interface IFormInput {\r\n  type: string;\r\n  inputName: string;\r\n  inputId: string;\r\n  inputValue: string;\r\n  inputText: string;\r\n  isPassword?: boolean;\r\n  isOpenEye?: boolean;\r\n  setInputValue: (value: string) => void;\r\n  handleEye?: () => void;\r\n}\r\n\r\nconst FormInput: FC<IFormInput> = ({\r\n  type,\r\n  inputName,\r\n  inputId,\r\n  inputValue,\r\n  inputText,\r\n  isPassword,\r\n  isOpenEye,\r\n  setInputValue,\r\n  handleEye,\r\n}) => {\r\n  return (\r\n    <div className=\"form-input-wrapper\">\r\n      <input\r\n        type={type}\r\n        name={inputName}\r\n        id={inputId}\r\n        className={isPassword ? \"form-input is-password\" : \"form-input\"}\r\n        placeholder=\" \"\r\n        autoComplete=\"off\"\r\n        value={inputValue}\r\n        onChange={(event) => setInputValue(event.target.value)}\r\n      />\r\n      <label htmlFor={inputId}>{inputText}</label>\r\n\r\n      {isPassword ? (\r\n        <div className=\"eye-wrapper\" onClick={handleEye}>\r\n          {isOpenEye ? <FiEye /> : <FiEyeOff />}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import { FC, MouseEvent } from \"react\";\r\n\r\nimport \"./FormButton.scss\";\r\n\r\nexport interface IFormButton {\r\n  buttonText: string;\r\n  functionButton?: () => void;\r\n}\r\n\r\nconst FormButton: FC<IFormButton> = ({ buttonText, functionButton }) => {\r\n  const handleClick = (event: MouseEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n\r\n    functionButton && functionButton();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-button\" onClick={handleClick}>\r\n      <p className=\"form-button-text\">{buttonText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormButton;\r\n","import { FC, MouseEvent, useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleAlert } from \"../../../store/features/alertSlice\";\r\nimport { toggleUserData } from \"../../../store/features/useSlice\";\r\n\r\nimport { RootType } from \"../../../store\";\r\n\r\nimport FormInput from \"../../UI/form-input/FormInput\";\r\nimport FormButton from \"../../UI/form-button/FormButton\";\r\n\r\nimport \"./AuthForm.scss\";\r\n\r\nimport { IForms } from \"../forms-wrapper/FormsWrapper\";\r\n\r\nconst tokenKey = \"token\";\r\n\r\nconst AuthForm: FC<IForms> = ({ slideMove, changeSlideMove }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [directionName, setDiractionName] = useState<string>(\"\");\r\n\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const [isOpenEye, setIsOpenEye] = useState<boolean>(false);\r\n  const [pasType, setPasType] = useState<string>(\"password\");\r\n\r\n  const handleChangeEmail = (value: string): void => {\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleChangePassword = (value: string): void => {\r\n    setPassword(value);\r\n  };\r\n  const handleEye = () => {\r\n    if (!isOpenEye) {\r\n      setPasType(\"text\");\r\n      return setIsOpenEye(true);\r\n    }\r\n\r\n    if (isOpenEye) {\r\n      setPasType(\"password\");\r\n      return setIsOpenEye(false);\r\n    }\r\n  };\r\n\r\n  const handleToBack = (): void => {\r\n    changeSlideMove(\"description\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setIsOpenEye(false);\r\n    setPasType(\"password\");\r\n  };\r\n\r\n  const handleAuth = (): void => {\r\n    localStorage.setItem(tokenKey, \"token\");\r\n\r\n    dispatch(\r\n      toggleAlert({\r\n        isAlert: true,\r\n        alertText: \"Вы авторизовались!\",\r\n        isAuthAlert: false,\r\n      })\r\n    );\r\n\r\n    dispatch(toggleUserData(true));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (slideMove === \"description\") return setDiractionName(\"\");\r\n\r\n    if (slideMove === \"authorization\") return setDiractionName(\"left\");\r\n  }, [slideMove]);\r\n\r\n  return (\r\n    <div className={`auth-form-wrapper ${directionName}`}>\r\n      <div className=\"auth-title\">\r\n        <h3>Авторизация</h3>\r\n      </div>\r\n\r\n      <form className=\"auth-form\">\r\n        <FormInput\r\n          type=\"text\"\r\n          inputName=\"email\"\r\n          inputId=\"auth-email\"\r\n          inputValue={email}\r\n          inputText=\"Введите е-маил\"\r\n          setInputValue={handleChangeEmail}\r\n        />\r\n\r\n        <FormInput\r\n          type={pasType}\r\n          inputName=\"password\"\r\n          inputId=\"auth-password\"\r\n          inputValue={password}\r\n          inputText=\"Введите пароль\"\r\n          isOpenEye={isOpenEye}\r\n          isPassword={true}\r\n          handleEye={handleEye}\r\n          setInputValue={handleChangePassword}\r\n        />\r\n\r\n        <div className=\"buttons-wrapper\">\r\n          <FormButton buttonText=\"авторизоваться\" functionButton={handleAuth} />\r\n          <FormButton buttonText=\"отмена\" functionButton={handleToBack} />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { FC, useState, useEffect } from \"react\";\r\n\r\nimport FormInput from \"../../UI/form-input/FormInput\";\r\nimport FormButton from \"../../UI/form-button/FormButton\";\r\n\r\nimport \"./RegisterForm.scss\";\r\n\r\nimport { IForms } from \"../forms-wrapper/FormsWrapper\";\r\n\r\nconst RegisterForm: FC<IForms> = ({ slideMove, changeSlideMove }) => {\r\n  const [directionName, setDiractionName] = useState<string>(\"\");\r\n\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const [isOpenEye, setIsOpenEye] = useState<boolean>(false);\r\n  const [pasType, setPasType] = useState<string>(\"password\");\r\n\r\n  const handleChangeEmail = (value: string): void => {\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleChangePassword = (value: string): void => {\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleEye = () => {\r\n    if (!isOpenEye) {\r\n      setPasType(\"text\");\r\n      return setIsOpenEye(true);\r\n    }\r\n\r\n    if (isOpenEye) {\r\n      setPasType(\"password\");\r\n      return setIsOpenEye(false);\r\n    }\r\n  };\r\n\r\n  const handleToBack = (): void => {\r\n    changeSlideMove(\"description\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setIsOpenEye(false);\r\n    setPasType(\"password\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (slideMove === \"description\") return setDiractionName(\"\");\r\n\r\n    if (slideMove === \"registration\") return setDiractionName(\"right\");\r\n  }, [slideMove]);\r\n\r\n  return (\r\n    <div className={`register-form-wrapper ${directionName}`}>\r\n      <div className=\"register-title\">\r\n        <h3>Регистрация</h3>\r\n      </div>\r\n\r\n      <form className=\"register-form\">\r\n        <FormInput\r\n          type=\"text\"\r\n          inputName=\"email\"\r\n          inputId=\"register-email\"\r\n          inputValue={email}\r\n          inputText=\"Введите е-маил\"\r\n          setInputValue={handleChangeEmail}\r\n        />\r\n\r\n        <FormInput\r\n          type={pasType}\r\n          inputName=\"password\"\r\n          inputId=\"register-password\"\r\n          inputValue={password}\r\n          inputText=\"Введите пароль\"\r\n          isOpenEye={isOpenEye}\r\n          isPassword={true}\r\n          handleEye={handleEye}\r\n          setInputValue={handleChangePassword}\r\n        />\r\n\r\n        <div className=\"buttons-wrapper\">\r\n          <FormButton buttonText=\"зарегистрироваться\" />\r\n          <FormButton buttonText=\"отмена\" functionButton={handleToBack} />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import { FC, useState, useEffect } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootType } from \"../../../store\";\r\n\r\nimport \"./FormsWrapper.scss\";\r\n\r\nimport DescriptionForm from \"../desription-form/DescriptionForm\";\r\nimport AuthForm from \"../auth-form/AuthForm\";\r\nimport RegisterForm from \"../register-form/RegisterForm\";\r\n\r\nexport interface IForms {\r\n  slideMove: string;\r\n  changeSlideMove: (direction: string) => void;\r\n}\r\n\r\nconst FormsWrapper: FC = () => {\r\n  const { isAuth } = useSelector((state: RootType) => state.userSlice);\r\n\r\n  const [slideMove, setSlideMove] = useState<string>(\"description\");\r\n\r\n  const [isClose, setIsClose] = useState<boolean>(false);\r\n\r\n  const changeSlideMove = (direction: string): void => {\r\n    setSlideMove(direction);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuth) return setIsClose(true);\r\n\r\n    return setIsClose(false);\r\n  }, [isAuth]);\r\n\r\n  return (\r\n    <div className={isClose ? \"forms-wrapper close\" : \"forms-wrapper\"}>\r\n      <RegisterForm slideMove={slideMove} changeSlideMove={changeSlideMove} />\r\n      <DescriptionForm\r\n        slideMove={slideMove}\r\n        changeSlideMove={changeSlideMove}\r\n      />\r\n      <AuthForm slideMove={slideMove} changeSlideMove={changeSlideMove} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormsWrapper;\r\n","import { FC } from \"react\";\r\n\r\nimport CardWrapper from \"../../components/card-wrapper/CardWrapper\";\r\nimport FormsWrapper from \"../../components/user-forms/forms-wrapper/FormsWrapper\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootType } from \"../../store\";\r\n\r\nimport \"./PersonalAccount.scss\";\r\n\r\nconst PersonalAccount: FC = () => {\r\n  const { isAuth } = useSelector((state: RootType) => state.userSlice);\r\n\r\n  return (\r\n    <section className=\"personal-account\">\r\n      {isAuth ? (\r\n        <div className=\"my-credits\">\r\n          <div className=\"my-credits-header\">\r\n            <h3>Личный кабинет</h3>\r\n          </div>\r\n\r\n          <div className=\"my-credits-body\">\r\n            <p>\r\n              В данном разделе будут отображаться ваши кредиты. При\r\n              необходимости вы можете их удалить либо отредактировать.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {isAuth ? <CardWrapper /> : <FormsWrapper />}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PersonalAccount;\r\n"],"names":["_ref","count","amount","termInMonth","monthlyPayment","delay","isLeft","isMove","setIsMove","useState","useEffect","setTimeout","_jsxs","className","children","_jsx","src","edit","alt","drop","cards","CardWrapper","length","map","card","index","Card","Math","ceil","slideMove","changeSlideMove","directionName","setDiractionName","onClick","type","inputName","inputId","inputValue","inputText","isPassword","isOpenEye","setInputValue","handleEye","name","id","placeholder","autoComplete","value","onChange","event","target","htmlFor","FiEye","FiEyeOff","buttonText","functionButton","preventDefault","dispatch","useDispatch","email","setEmail","password","setPassword","setIsOpenEye","pasType","setPasType","FormInput","FormButton","handleAuth","localStorage","setItem","toggleAlert","isAlert","alertText","isAuthAlert","toggleUserData","handleToBack","FormsWrapper","isAuth","useSelector","state","userSlice","setSlideMove","isClose","setIsClose","direction","RegisterForm","DescriptionForm","AuthForm","PersonalAccount"],"sourceRoot":""}