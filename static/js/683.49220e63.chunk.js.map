{"version":3,"file":"static/js/683.49220e63.chunk.js","mappings":"iJAMA,MA6CA,EA7CoCA,IAAqC,IAApC,UAAEC,EAAS,gBAAEC,GAAiBF,EACjE,MAAOG,EAAeC,IAAoBC,EAAAA,EAAAA,UAAiB,IAU3D,OARAC,EAAAA,EAAAA,YAAU,IACU,gBAAdL,EAAoCG,EAAiB,IAEvC,iBAAdH,EAAqCG,EAAiB,QAExC,kBAAdH,EAAsCG,EAAiB,cAA3D,GACC,CAACH,KAGFM,EAAAA,EAAAA,MAAA,OAAKC,UAAW,oBAAoBL,IAAgBM,SAAA,EAClDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,UAChCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,wDAGNC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,UAC1BC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,2lBAKLC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC/BF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,wHACsB,KACvBC,EAAAA,EAAAA,KAAA,QACEF,UAAU,UACVG,QAASA,IAAMT,EAAgB,iBAAiBO,SACjD,qFAEO,IAAI,qBACR,KACJC,EAAAA,EAAAA,KAAA,QACEF,UAAU,cACVG,QAASA,IAAMT,EAAgB,gBAAgBO,SAChD,sGAKD,E,aC5BV,MAoCA,EApCkCT,IAU3B,IAV4B,KACjCY,EAAI,UACJC,EAAS,QACTC,EAAO,WACPC,EAAU,UACVC,EAAS,WACTC,EAAU,UACVC,EAAS,cACTC,EAAa,UACbC,GACDpB,EACC,OACEO,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,SACEE,KAAMA,EACNS,KAAMR,EACNS,GAAIR,EACJN,UAAWS,EAAa,yBAA2B,aACnDM,YAAY,IACZC,aAAa,MACbC,MAAOV,EACPW,SAAWC,GAAUR,EAAcQ,EAAMC,OAAOH,UAElDf,EAAAA,EAAAA,KAAA,SAAOmB,QAASf,EAAQL,SAAEO,IAEzBC,GACCP,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAcG,QAASS,EAAUX,SAC7CS,GAAYR,EAAAA,EAAAA,KAACoB,EAAAA,IAAK,KAAMpB,EAAAA,EAAAA,KAACqB,EAAAA,IAAQ,MAGpC,KAEE,EC5BV,EAdoC/B,IAAqC,IAApC,WAAEgC,EAAU,eAAEC,GAAgBjC,EAOjE,OACEU,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAcG,QAPVgB,IACnBA,EAAMO,iBAEND,GAAkBA,GAAgB,EAIgBxB,UAChDC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,mBAAkBC,SAAEuB,KAC7B,ECqEV,EA/E6BhC,IAAqC,IAApC,UAAEC,EAAS,gBAAEC,GAAiBF,EAC1D,MAAOG,EAAeC,IAAoBC,EAAAA,EAAAA,UAAiB,KAEpD8B,EAAOC,IAAY/B,EAAAA,EAAAA,UAAiB,KACpCgC,EAAUC,IAAejC,EAAAA,EAAAA,UAAiB,KAE1Ca,EAAWqB,IAAgBlC,EAAAA,EAAAA,WAAkB,IAC7CmC,EAASC,IAAcpC,EAAAA,EAAAA,UAAiB,YAmC/C,OANAC,EAAAA,EAAAA,YAAU,IACU,gBAAdL,EAAoCG,EAAiB,IAEvC,kBAAdH,EAAsCG,EAAiB,aAA3D,GACC,CAACH,KAGFM,EAAAA,EAAAA,MAAA,OAAKC,UAAW,qBAAqBL,IAAgBM,SAAA,EACnDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0EAGNF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,YAAWC,SAAA,EACzBC,EAAAA,EAAAA,KAACgC,EAAS,CACR9B,KAAK,OACLC,UAAU,QACVC,QAAQ,aACRC,WAAYoB,EACZnB,UAAU,6EACVG,cA9CmBM,IACzBW,EAASX,EAAM,KAgDXf,EAAAA,EAAAA,KAACgC,EAAS,CACR9B,KAAM4B,EACN3B,UAAU,WACVC,QAAQ,gBACRC,WAAYsB,EACZrB,UAAU,kFACVE,UAAWA,EACXD,YAAY,EACZG,UAlDUA,IACXF,EAKDA,GACFuB,EAAW,YACJF,GAAa,SAFtB,GAJEE,EAAW,QACJF,GAAa,IAgDhBpB,cAtDsBM,IAC5Ba,EAAYb,EAAM,KAwDdlB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAACiC,EAAU,CAACX,WAAW,0FACvBtB,EAAAA,EAAAA,KAACiC,EAAU,CAACX,WAAW,uCAASC,eA5CnBW,KACnB1C,EAAgB,eAChBkC,EAAS,IACTE,EAAY,IACZC,GAAa,GACbE,EAAW,WAAW,YA0ChB,ECKV,EAhFiCzC,IAAqC,IAApC,UAAEC,EAAS,gBAAEC,GAAiBF,EAC9D,MAAOG,EAAeC,IAAoBC,EAAAA,EAAAA,UAAiB,KAEpD8B,EAAOC,IAAY/B,EAAAA,EAAAA,UAAiB,KACpCgC,EAAUC,IAAejC,EAAAA,EAAAA,UAAiB,KAE1Ca,EAAWqB,IAAgBlC,EAAAA,EAAAA,WAAkB,IAC7CmC,EAASC,IAAcpC,EAAAA,EAAAA,UAAiB,YAoC/C,OANAC,EAAAA,EAAAA,YAAU,IACU,gBAAdL,EAAoCG,EAAiB,IAEvC,iBAAdH,EAAqCG,EAAiB,cAA1D,GACC,CAACH,KAGFM,EAAAA,EAAAA,MAAA,OAAKC,UAAW,yBAAyBL,IAAgBM,SAAA,EACvDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,iBAAgBC,UAC7BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0EAGNF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,gBAAeC,SAAA,EAC7BC,EAAAA,EAAAA,KAACgC,EAAS,CACR9B,KAAK,OACLC,UAAU,QACVC,QAAQ,iBACRC,WAAYoB,EACZnB,UAAU,6EACVG,cA/CmBM,IACzBW,EAASX,EAAM,KAiDXf,EAAAA,EAAAA,KAACgC,EAAS,CACR9B,KAAM4B,EACN3B,UAAU,WACVC,QAAQ,oBACRC,WAAYsB,EACZrB,UAAU,kFACVE,UAAWA,EACXD,YAAY,EACZG,UAlDUA,IACXF,EAKDA,GACFuB,EAAW,YACJF,GAAa,SAFtB,GAJEE,EAAW,QACJF,GAAa,IAgDhBpB,cAvDsBM,IAC5Ba,EAAYb,EAAM,KAyDdlB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC9BC,EAAAA,EAAAA,KAACiC,EAAU,CAACX,WAAW,kHACvBtB,EAAAA,EAAAA,KAACiC,EAAU,CAACX,WAAW,uCAASC,eA5CnBW,KACnB1C,EAAgB,eAChBkC,EAAS,IACTE,EAAY,IACZC,GAAa,GACbE,EAAW,WAAW,YA0ChB,ECrDV,EAnByBI,KACvB,MAAO5C,EAAW6C,IAAgBzC,EAAAA,EAAAA,UAAiB,eAE7CH,EAAmB6C,IACvBD,EAAaC,EAAU,EAGzB,OACExC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC5BC,EAAAA,EAAAA,KAACsC,EAAY,CAAC/C,UAAWA,EAAWC,gBAAiBA,KACrDQ,EAAAA,EAAAA,KAACuC,EAAe,CACdhD,UAAWA,EACXC,gBAAiBA,KAEnBQ,EAAAA,EAAAA,KAACwC,EAAQ,CAACjD,UAAWA,EAAWC,gBAAiBA,MAC7C,ECdV,EAR4BiD,KAExBzC,EAAAA,EAAAA,KAAA,WAASF,UAAU,mBAAkBC,UACnCC,EAAAA,EAAAA,KAACmC,EAAY,K","sources":["components/user-forms/desription-form/DescriptionForm.tsx","components/UI/form-input/FormInput.tsx","components/UI/form-button/FormButton.tsx","components/user-forms/auth-form/AuthForm.tsx","components/user-forms/register-form/RegisterForm.tsx","components/user-forms/forms-wrapper/FormsWrapper.tsx","pages/personal-account/PersonalAccount.tsx"],"sourcesContent":["import { FC, useState, useEffect } from \"react\";\r\n\r\nimport \"./DescriptionForm.scss\";\r\n\r\nimport { IForms } from \"../forms-wrapper/FormsWrapper\";\r\n\r\nconst DescriptionForm: FC<IForms> = ({ slideMove, changeSlideMove }) => {\r\n  const [directionName, setDiractionName] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (slideMove === \"description\") return setDiractionName(\"\");\r\n\r\n    if (slideMove === \"registration\") return setDiractionName(\"left\");\r\n\r\n    if (slideMove === \"authorization\") return setDiractionName(\"right\");\r\n  }, [slideMove]);\r\n\r\n  return (\r\n    <div className={`description-form ${directionName}`}>\r\n      <div className=\"description-title\">\r\n        <h3>Описание</h3>\r\n      </div>\r\n\r\n      <div className=\"description\">\r\n        <p>\r\n          Привет! В данном разделе ты найдешь информацию по своим кредитам, а\r\n          также возможность их удаления и редактирования.\r\n        </p>\r\n      </div>\r\n      <div className=\"cont-description\">\r\n        <p>\r\n          Прежде чем продолжить,{\" \"}\r\n          <span\r\n            className=\"to-auth\"\r\n            onClick={() => changeSlideMove(\"authorization\")}\r\n          >\r\n            войди в аккаунт\r\n          </span>{\" \"}\r\n          или{\" \"}\r\n          <span\r\n            className=\"to-register\"\r\n            onClick={() => changeSlideMove(\"registration\")}\r\n          >\r\n            зарегистрируйся\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DescriptionForm;\r\n","import { FC } from \"react\";\r\n\r\nimport { FiEye } from \"react-icons/fi\";\r\nimport { FiEyeOff } from \"react-icons/fi\";\r\n\r\nimport \"./FormInput.scss\";\r\n\r\nexport interface IFormInput {\r\n  type: string;\r\n  inputName: string;\r\n  inputId: string;\r\n  inputValue: string;\r\n  inputText: string;\r\n  isPassword?: boolean;\r\n  isOpenEye?: boolean;\r\n  setInputValue: (value: string) => void;\r\n  handleEye?: () => void;\r\n}\r\n\r\nconst FormInput: FC<IFormInput> = ({\r\n  type,\r\n  inputName,\r\n  inputId,\r\n  inputValue,\r\n  inputText,\r\n  isPassword,\r\n  isOpenEye,\r\n  setInputValue,\r\n  handleEye,\r\n}) => {\r\n  return (\r\n    <div className=\"form-input-wrapper\">\r\n      <input\r\n        type={type}\r\n        name={inputName}\r\n        id={inputId}\r\n        className={isPassword ? \"form-input is-password\" : \"form-input\"}\r\n        placeholder=\" \"\r\n        autoComplete=\"off\"\r\n        value={inputValue}\r\n        onChange={(event) => setInputValue(event.target.value)}\r\n      />\r\n      <label htmlFor={inputId}>{inputText}</label>\r\n\r\n      {isPassword ? (\r\n        <div className=\"eye-wrapper\" onClick={handleEye}>\r\n          {isOpenEye ? <FiEye /> : <FiEyeOff />}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import { FC, MouseEvent } from \"react\";\r\n\r\nimport \"./FormButton.scss\";\r\n\r\nexport interface IFormButton {\r\n  buttonText: string;\r\n  functionButton?: () => void;\r\n}\r\n\r\nconst FormButton: FC<IFormButton> = ({ buttonText, functionButton }) => {\r\n  const handleClick = (event: MouseEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n\r\n    functionButton && functionButton();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-button\" onClick={handleClick}>\r\n      <p className=\"form-button-text\">{buttonText}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormButton;\r\n","import { FC, useState, useEffect } from \"react\";\r\n\r\nimport FormInput from \"../../UI/form-input/FormInput\";\r\nimport FormButton from \"../../UI/form-button/FormButton\";\r\n\r\nimport \"./AuthForm.scss\";\r\n\r\nimport { IForms } from \"../forms-wrapper/FormsWrapper\";\r\n\r\nconst AuthForm: FC<IForms> = ({ slideMove, changeSlideMove }) => {\r\n  const [directionName, setDiractionName] = useState<string>(\"\");\r\n\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const [isOpenEye, setIsOpenEye] = useState<boolean>(false);\r\n  const [pasType, setPasType] = useState<string>(\"password\");\r\n\r\n  const handleChangeEmail = (value: string): void => {\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleChangePassword = (value: string): void => {\r\n    setPassword(value);\r\n  };\r\n  const handleEye = () => {\r\n    if (!isOpenEye) {\r\n      setPasType(\"text\");\r\n      return setIsOpenEye(true);\r\n    }\r\n\r\n    if (isOpenEye) {\r\n      setPasType(\"password\");\r\n      return setIsOpenEye(false);\r\n    }\r\n  };\r\n\r\n  const handleToBack = (): void => {\r\n    changeSlideMove(\"description\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setIsOpenEye(false);\r\n    setPasType(\"password\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (slideMove === \"description\") return setDiractionName(\"\");\r\n\r\n    if (slideMove === \"authorization\") return setDiractionName(\"left\");\r\n  }, [slideMove]);\r\n\r\n  return (\r\n    <div className={`auth-form-wrapper ${directionName}`}>\r\n      <div className=\"auth-title\">\r\n        <h3>Авторизация</h3>\r\n      </div>\r\n\r\n      <form className=\"auth-form\">\r\n        <FormInput\r\n          type=\"text\"\r\n          inputName=\"email\"\r\n          inputId=\"auth-email\"\r\n          inputValue={email}\r\n          inputText=\"Введите е-маил\"\r\n          setInputValue={handleChangeEmail}\r\n        />\r\n\r\n        <FormInput\r\n          type={pasType}\r\n          inputName=\"password\"\r\n          inputId=\"auth-password\"\r\n          inputValue={password}\r\n          inputText=\"Введите пароль\"\r\n          isOpenEye={isOpenEye}\r\n          isPassword={true}\r\n          handleEye={handleEye}\r\n          setInputValue={handleChangePassword}\r\n        />\r\n\r\n        <div className=\"buttons-wrapper\">\r\n          <FormButton buttonText=\"авторизоваться\" />\r\n          <FormButton buttonText=\"отмена\" functionButton={handleToBack} />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { FC, useState, useEffect } from \"react\";\r\n\r\nimport FormInput from \"../../UI/form-input/FormInput\";\r\nimport FormButton from \"../../UI/form-button/FormButton\";\r\n\r\nimport \"./RegisterForm.scss\";\r\n\r\nimport { IForms } from \"../forms-wrapper/FormsWrapper\";\r\n\r\nconst RegisterForm: FC<IForms> = ({ slideMove, changeSlideMove }) => {\r\n  const [directionName, setDiractionName] = useState<string>(\"\");\r\n\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const [isOpenEye, setIsOpenEye] = useState<boolean>(false);\r\n  const [pasType, setPasType] = useState<string>(\"password\");\r\n\r\n  const handleChangeEmail = (value: string): void => {\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleChangePassword = (value: string): void => {\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleEye = () => {\r\n    if (!isOpenEye) {\r\n      setPasType(\"text\");\r\n      return setIsOpenEye(true);\r\n    }\r\n\r\n    if (isOpenEye) {\r\n      setPasType(\"password\");\r\n      return setIsOpenEye(false);\r\n    }\r\n  };\r\n\r\n  const handleToBack = (): void => {\r\n    changeSlideMove(\"description\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setIsOpenEye(false);\r\n    setPasType(\"password\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (slideMove === \"description\") return setDiractionName(\"\");\r\n\r\n    if (slideMove === \"registration\") return setDiractionName(\"right\");\r\n  }, [slideMove]);\r\n\r\n  return (\r\n    <div className={`register-form-wrapper ${directionName}`}>\r\n      <div className=\"register-title\">\r\n        <h3>Регистрация</h3>\r\n      </div>\r\n\r\n      <form className=\"register-form\">\r\n        <FormInput\r\n          type=\"text\"\r\n          inputName=\"email\"\r\n          inputId=\"register-email\"\r\n          inputValue={email}\r\n          inputText=\"Введите е-маил\"\r\n          setInputValue={handleChangeEmail}\r\n        />\r\n\r\n        <FormInput\r\n          type={pasType}\r\n          inputName=\"password\"\r\n          inputId=\"register-password\"\r\n          inputValue={password}\r\n          inputText=\"Введите пароль\"\r\n          isOpenEye={isOpenEye}\r\n          isPassword={true}\r\n          handleEye={handleEye}\r\n          setInputValue={handleChangePassword}\r\n        />\r\n\r\n        <div className=\"buttons-wrapper\">\r\n          <FormButton buttonText=\"зарегистрироваться\" />\r\n          <FormButton buttonText=\"отмена\" functionButton={handleToBack} />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import { FC, useState } from \"react\";\r\n\r\nimport \"./FormsWrapper.scss\";\r\n\r\nimport DescriptionForm from \"../desription-form/DescriptionForm\";\r\nimport AuthForm from \"../auth-form/AuthForm\";\r\nimport RegisterForm from \"../register-form/RegisterForm\";\r\n\r\nexport interface IForms {\r\n  slideMove: string;\r\n  changeSlideMove: (direction: string) => void;\r\n}\r\n\r\nconst FormsWrapper: FC = () => {\r\n  const [slideMove, setSlideMove] = useState<string>(\"description\");\r\n\r\n  const changeSlideMove = (direction: string): void => {\r\n    setSlideMove(direction);\r\n  };\r\n\r\n  return (\r\n    <div className=\"forms-wrapper\">\r\n      <RegisterForm slideMove={slideMove} changeSlideMove={changeSlideMove} />\r\n      <DescriptionForm\r\n        slideMove={slideMove}\r\n        changeSlideMove={changeSlideMove}\r\n      />\r\n      <AuthForm slideMove={slideMove} changeSlideMove={changeSlideMove} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormsWrapper;\r\n","import { FC } from \"react\";\r\n\r\nimport FormsWrapper from \"../../components/user-forms/forms-wrapper/FormsWrapper\";\r\n\r\nimport \"./PersonalAccount.scss\";\r\n\r\nconst PersonalAccount: FC = () => {\r\n  return (\r\n    <section className=\"personal-account\">\r\n      <FormsWrapper />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PersonalAccount;\r\n"],"names":["_ref","slideMove","changeSlideMove","directionName","setDiractionName","useState","useEffect","_jsxs","className","children","_jsx","onClick","type","inputName","inputId","inputValue","inputText","isPassword","isOpenEye","setInputValue","handleEye","name","id","placeholder","autoComplete","value","onChange","event","target","htmlFor","FiEye","FiEyeOff","buttonText","functionButton","preventDefault","email","setEmail","password","setPassword","setIsOpenEye","pasType","setPasType","FormInput","FormButton","handleToBack","FormsWrapper","setSlideMove","direction","RegisterForm","DescriptionForm","AuthForm","PersonalAccount"],"sourceRoot":""}