{"version":3,"file":"static/js/78.9fb6816f.chunk.js","mappings":"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","sources":["errorTypeGuard.ts","store/services/endpoints/loanApi.ts","components/UI/range-input/RangeInput.tsx","components/calculator/Calculator.tsx","chart/PaymentChart.tsx","components/UI/download-button/DownloadButton.tsx","components/payment-schedule/PaymentSchedule.tsx","pages/main-page/MainPage.tsx"],"sourcesContent":["import { FetchBaseQueryError } from \"@reduxjs/toolkit/query\";\r\n\r\n// export interface IDataError {\r\n//   error: string;\r\n//   message: string[];\r\n//   statusCode: number;\r\n//   status: number;\r\n// }\r\n\r\nexport interface IError {\r\n  status: number;\r\n  data: object;\r\n}\r\n\r\nconst isFetchBaseQueryError = (error: any): error is FetchBaseQueryError => {\r\n  return error && typeof error.status === \"number\";\r\n};\r\n\r\nexport const handleError = (error: any) => {\r\n  if (isFetchBaseQueryError(error)) return error as IError;\r\n};\r\n","import { serviceApi } from \"../servicesApi\";\r\n\r\nimport { ILoan } from \"../types\";\r\n\r\nexport const loanApi = serviceApi.injectEndpoints({\r\n  endpoints: (builder) => ({\r\n    calculate: builder.mutation<\r\n      ILoan,\r\n      {\r\n        amount: number;\r\n        interestRate: number;\r\n        termInMonth: number;\r\n      }\r\n    >({\r\n      query: (loan) => ({\r\n        url: \"/team21/api/v1/loan/calculate\",\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: {\r\n          amount: loan.amount,\r\n          interestRate: loan.interestRate,\r\n          termInMonth: loan.termInMonth,\r\n        },\r\n      }),\r\n    }),\r\n\r\n    save: builder.query<\r\n      any,\r\n      // {\r\n      //   amount: number;\r\n      //   interestRate: number;\r\n      //   termInMonth: number;\r\n      // }\r\n      void\r\n    >({\r\n      query: (loan) => ({\r\n        url: \"/team21/api/v1/loan/save/0\",\r\n        method: \"get\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        // body: {\r\n        //   amount: loan.amount,\r\n        //   interestRate: loan.interestRate,\r\n        //   termInMonth: loan.termInMonth,\r\n        // },\r\n      }),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useCalculateMutation, useLazySaveQuery } = loanApi;\r\n","import {\r\n  FC,\r\n  MouseEvent,\r\n  ChangeEvent,\r\n  useRef,\r\n  Dispatch,\r\n  SetStateAction,\r\n  useState,\r\n  useEffect,\r\n} from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleAlert } from \"../../../store/features/alertSlice\";\r\n\r\nimport \"./RangeInput.scss\";\r\n\r\nexport interface IRangeInput {\r\n  rangeText: string;\r\n  preId: string;\r\n  min: string;\r\n  max: string;\r\n  defaultValue?: string;\r\n  pointBegin: string;\r\n  pointMedium: string;\r\n  pointEnd: string;\r\n  isDate: boolean;\r\n  externalValue: string;\r\n  setExternalValue: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nconst RangeInput: FC<IRangeInput> = ({\r\n  rangeText,\r\n  preId,\r\n  min,\r\n  max,\r\n  defaultValue,\r\n  pointBegin,\r\n  pointMedium,\r\n  pointEnd,\r\n  isDate,\r\n  externalValue,\r\n  setExternalValue,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const rangeRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [rangeValue, setRangeValue] = useState<number>(0);\r\n  const [isAlert, setIsAlert] = useState<boolean>(false);\r\n\r\n  const handleBlur = (isSum: boolean) => {\r\n    if (!isSum) {\r\n      let _current: number;\r\n\r\n      if (externalValue.match(/[годлт]/gi)) {\r\n        let res = 0;\r\n        let chars = externalValue.split(\" \");\r\n\r\n        for (let i = 0; i < chars.length; i++) {\r\n          if (chars[i] === \"год\" || chars[i] === \"года\" || chars[i] === \"лет\") {\r\n            res += +chars[i - 1] * 12;\r\n          }\r\n\r\n          if (chars[i] === \"месяцев\") res += +chars[i - 1];\r\n        }\r\n\r\n        _current = res;\r\n      } else {\r\n        _current = Number(\r\n          externalValue.replace(\" мес.\", \"\").split(\" \").join(\"\")\r\n        );\r\n      }\r\n\r\n      _current! < 6\r\n        ? setExternalValue(\"6 месяцев\")\r\n        : setExternalValue(`${_current!} месяцев`);\r\n    }\r\n\r\n    if (isSum) {\r\n      let _current = Number(\r\n        externalValue.replace(\" ₽\", \"\").split(\" \").join(\"\")\r\n      );\r\n\r\n      _current < 100000 && setExternalValue(\"100 000 ₽\");\r\n    }\r\n  };\r\n\r\n  const setCoordX = (coordX: number) => {\r\n    if (rangeRef.current) {\r\n      rangeRef.current.style.background = `linear-gradient(90deg, #00aae6 ${coordX}%, #fff ${coordX}%)`;\r\n\r\n      return setRangeValue(coordX);\r\n    }\r\n  };\r\n\r\n  const skipRuble = (event: MouseEvent<HTMLInputElement>): void => {\r\n    const input = event.target as HTMLInputElement;\r\n    const startPosition = input.selectionStart || 0;\r\n\r\n    if (isDate) {\r\n      if (/^\\d+\\s*мес\\./.test(input.value))\r\n        return input.setSelectionRange(\r\n          input.value.length - 5,\r\n          input.value.length - 5\r\n        );\r\n\r\n      let months = input.value\r\n        .split(\" \")\r\n        .reduce<number>((acc, char, index, arr) => {\r\n          if (char === \"месяцев\") return (acc += Number(arr[index - 1]));\r\n\r\n          if (char === \"год\" || char === \"года\" || char === \"лет\")\r\n            acc += Number(arr[index - 1]) * 12;\r\n\r\n          return acc;\r\n        }, 0);\r\n\r\n      setExternalValue(`${months} мес.`);\r\n\r\n      if (externalValue) {\r\n        setTimeout(\r\n          () =>\r\n            input.setSelectionRange(\r\n              `${months} мес.`.length - 5,\r\n              `${months} мес.`.length - 5\r\n            ),\r\n          0\r\n        );\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (!isDate) {\r\n      const needPosition = input.value.replace(\"₽\", \"\");\r\n\r\n      if (startPosition && startPosition > needPosition.length)\r\n        input.setSelectionRange(\r\n          needPosition.length - 1,\r\n          needPosition.length - 1\r\n        );\r\n    }\r\n  };\r\n\r\n  const handleValueInput = (\r\n    event: ChangeEvent<HTMLInputElement>,\r\n    isRange: boolean\r\n  ) => {\r\n    if (!isRange) {\r\n      const input = event.target as HTMLInputElement;\r\n      const currentPosition = input.selectionStart || 0;\r\n\r\n      if (!isDate) {\r\n        let needPosition = event.target.value.replace(/₽/gi, \"\");\r\n\r\n        let currentValue: number;\r\n\r\n        let inputValue: string = needPosition\r\n          .split(\" \")\r\n          .map((char) => char.trim())\r\n          .join(\"\");\r\n\r\n        if (!/^[0-9]*$/.test(inputValue)) {\r\n          dispatch(\r\n            toggleAlert({\r\n              isAlert: true,\r\n              isAuthAlert: false,\r\n              alertText: \"Вводите только числа!\",\r\n            })\r\n          );\r\n\r\n          return setIsAlert(true);\r\n        }\r\n\r\n        currentValue = Number(inputValue);\r\n\r\n        let coordX =\r\n          currentValue <= 100000\r\n            ? 0\r\n            : currentValue > 40000000\r\n            ? 40000000\r\n            : Math.ceil(currentValue / 400000);\r\n\r\n        setCoordX(coordX);\r\n\r\n        const result = `${currentValue > 40000000 ? 40000000 : currentValue}`\r\n          .split(\"\")\r\n          .reverse()\r\n          .map((char, id) => (id % 3 === 0 ? `${char} ` : char))\r\n          .reverse()\r\n          .join(\"\");\r\n\r\n        setExternalValue(result + \"₽\");\r\n\r\n        if (currentPosition > needPosition.length)\r\n          return setTimeout(\r\n            () =>\r\n              input.setSelectionRange(\r\n                needPosition.length - 1,\r\n                needPosition.length - 1\r\n              ),\r\n            0\r\n          );\r\n\r\n        if (currentPosition < needPosition.length)\r\n          return setTimeout(\r\n            () => input.setSelectionRange(currentPosition, currentPosition),\r\n            0\r\n          );\r\n      }\r\n\r\n      if (isDate) {\r\n        if (\r\n          currentPosition === input.value.length ||\r\n          currentPosition === input.value.length - 4\r\n        )\r\n          return;\r\n\r\n        let inputValue: string = input.value.replace(\"мес.\", \"\").trim();\r\n\r\n        inputValue = inputValue ? inputValue : \"0\";\r\n\r\n        if (!/^[0-9]*$/.test(inputValue)) {\r\n          dispatch(\r\n            toggleAlert({\r\n              isAlert: true,\r\n              isAuthAlert: false,\r\n              alertText: \"Вводите только числа!\",\r\n            })\r\n          );\r\n\r\n          return setIsAlert(true);\r\n        }\r\n\r\n        let currentValue: number = Number(inputValue);\r\n\r\n        let coordX =\r\n          Math.ceil(currentValue / 0.78) - 6 >= 100\r\n            ? 100\r\n            : Math.ceil(currentValue / 0.78) - 6;\r\n\r\n        setCoordX(coordX);\r\n\r\n        setExternalValue(`${currentValue > 84 ? 84 : currentValue} мес.`);\r\n\r\n        setTimeout(\r\n          () =>\r\n            input.setSelectionRange(\r\n              `${currentValue} мес.`.length - 5,\r\n              `${currentValue} мес.`.length - 5\r\n            ),\r\n          0\r\n        );\r\n      }\r\n    }\r\n\r\n    if (isRange) {\r\n      let coordX: number = Number(event.target.value);\r\n\r\n      setCoordX(coordX);\r\n\r\n      if (!isDate) {\r\n        const result: string = `${coordX === 0 ? 100000 : coordX * 400000}`\r\n          .split(\"\")\r\n          .reverse()\r\n          .map((char, id) => (id % 3 === 0 ? `${char} ` : char))\r\n          .reverse()\r\n          .join(\"\");\r\n\r\n        return setExternalValue(result + \"₽\");\r\n      }\r\n\r\n      if (isDate) {\r\n        if (coordX === 0) return setExternalValue(\"6 месяцев\");\r\n\r\n        let months: number | string = Math.ceil(coordX * 0.78) + 6;\r\n        let years: number | string = Math.floor(months / 12);\r\n\r\n        if (years === 0) {\r\n          years = \"\";\r\n          months = months + \" месяцев\";\r\n        } else {\r\n          months = months - years * 12;\r\n\r\n          months = months === 0 ? \"\" : `${months} месяцев`;\r\n\r\n          if (years === 1) years = `${years} год`;\r\n\r\n          if (+years < 5 && +years > 1) years = `${years} года`;\r\n\r\n          if (+years > 4 && +years <= 7) years = `${years} лет`;\r\n        }\r\n\r\n        return setExternalValue(`${years} ${months}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (rangeValue && isAlert) return setIsAlert(false);\r\n  }, [rangeValue]);\r\n\r\n  return (\r\n    <div className=\"range-input-wrapper\">\r\n      <input\r\n        type=\"range\"\r\n        name=\"range-input\"\r\n        id={`range-input-${preId}`}\r\n        className=\"range-input\"\r\n        min={min}\r\n        max={max}\r\n        value={rangeValue}\r\n        onChange={(event) => handleValueInput(event, true)}\r\n        ref={rangeRef}\r\n      />\r\n      <label htmlFor={`range-input-${preId}`}>{rangeText}</label>\r\n      <div className=\"value-wrapper\">\r\n        <input\r\n          type=\"text\"\r\n          className={isAlert ? \"range-value alert\" : \"range-value\"}\r\n          value={externalValue}\r\n          onClick={skipRuble}\r\n          onChange={(event) => handleValueInput(event, false)}\r\n          onBlur={() => handleBlur(isDate ? false : true)}\r\n        />\r\n      </div>\r\n      <div className=\"input-points\">\r\n        <ul>\r\n          <li className=\"point\">{pointBegin}</li>\r\n          <li className=\"point\">{pointMedium}</li>\r\n          <li className=\"point\">{pointEnd}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RangeInput;\r\n","import {\r\n  FC,\r\n  MouseEvent,\r\n  ChangeEvent,\r\n  useState,\r\n  useEffect,\r\n  Dispatch,\r\n  SetStateAction,\r\n} from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleAlert } from \"../../store/features/alertSlice\";\r\n\r\nimport { RootType } from \"../../store\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { useLazySaveQuery } from \"../../store/services/endpoints/loanApi\";\r\n\r\nimport RangeInput from \"../UI/range-input/RangeInput\";\r\n\r\nimport \"./Calculator.scss\";\r\n\r\nexport interface ICalculator {\r\n  monthSum: string;\r\n  setMonthSum: Dispatch<SetStateAction<string>>;\r\n  isLoading: boolean;\r\n  handleCalculate: (\r\n    event: MouseEvent<HTMLDivElement>,\r\n    sumValue: string,\r\n    percent: string,\r\n    term: string\r\n  ) => void;\r\n}\r\n\r\nconst Calculator: FC<ICalculator> = ({\r\n  handleCalculate,\r\n  isLoading,\r\n  monthSum,\r\n  setMonthSum,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [\r\n    triggerSave,\r\n    { isError, isSuccess, data, isLoading: isSaving, error },\r\n  ] = useLazySaveQuery();\r\n\r\n  const { isAuth } = useSelector((state: RootType) => state.userSlice);\r\n\r\n  const [sumValue, setSumValue] = useState<string>(\"100 000 ₽\");\r\n  const [term, setTerm] = useState<string>(\"6 месяцев\");\r\n  const [percent, setPercent] = useState<string>(\"13 %\");\r\n\r\n  const [alertButton, setAlertButton] = useState<boolean>(false);\r\n  const [alertPercent, setAlertPercent] = useState<boolean>(false);\r\n\r\n  const handleSaveButton = (event: MouseEvent<HTMLDivElement>): void => {\r\n    event.preventDefault();\r\n\r\n    if (!isAuth) {\r\n      !alertButton &&\r\n        dispatch(\r\n          toggleAlert({\r\n            alertText: \"Сначала необходимо зайти в личный кабинет!\",\r\n            isAlert: true,\r\n            isAuthAlert: true,\r\n          })\r\n        );\r\n\r\n      setAlertButton(true);\r\n    }\r\n\r\n    if (isAuth) {\r\n      triggerSave();\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    const _num = Number(percent.replace(\" %\", \"\"));\r\n\r\n    _num < 1 && setPercent(\"1 %\");\r\n\r\n    _num > 25 && setPercent(\"25 %\");\r\n  };\r\n\r\n  const skipProcent = (event: MouseEvent<HTMLInputElement>) => {\r\n    const input = event.target as HTMLInputElement;\r\n    const startPosition = input.selectionStart || 0;\r\n    const needPosition = input.value.replace(\" %\", \"\").length;\r\n\r\n    if (startPosition > needPosition)\r\n      input.setSelectionRange(needPosition, needPosition);\r\n  };\r\n\r\n  const changeInputHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n    const input = event.target as HTMLInputElement;\r\n    const currentPercent = event.target.value.replace(\" %\", \"\");\r\n\r\n    if (!/^[0-9]*$/.test(currentPercent)) {\r\n      dispatch(\r\n        toggleAlert({\r\n          isAlert: true,\r\n          isAuthAlert: false,\r\n          alertText: \"Вводите только числа!\",\r\n        })\r\n      );\r\n\r\n      return setAlertPercent(true);\r\n    }\r\n\r\n    setPercent(currentPercent + \" %\");\r\n\r\n    setTimeout(\r\n      () =>\r\n        input.setSelectionRange(currentPercent.length, currentPercent.length),\r\n      0\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (alertButton) {\r\n      setTimeout(() => {\r\n        setAlertButton(false);\r\n      }, 2000);\r\n    }\r\n  }, [alertButton]);\r\n\r\n  useEffect(() => {\r\n    setAlertPercent(false);\r\n  }, [percent]);\r\n\r\n  useEffect(() => {\r\n    if (isError) console.log(error);\r\n\r\n    if (isSaving) console.log(data);\r\n  }, [isError, isSaving, data]);\r\n\r\n  return (\r\n    <div className=\"calculator-wrapper\">\r\n      <div className=\"params-input-wrapper\">\r\n        <div className=\"calculator-title\">\r\n          <h2>Рассчитать сумму</h2>\r\n        </div>\r\n        <form className=\"params-form\">\r\n          <div className=\"params\">\r\n            <RangeInput\r\n              rangeText=\"Какую сумму желаете взять?\"\r\n              preId=\"sum\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              pointBegin=\"100 тыс ₽\"\r\n              pointMedium=\"20 млн ₽\"\r\n              pointEnd=\"40 млн ₽\"\r\n              isDate={false}\r\n              externalValue={sumValue}\r\n              setExternalValue={setSumValue}\r\n            />\r\n\r\n            <RangeInput\r\n              rangeText=\"На какой срок желаете взять?\"\r\n              preId=\"term\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              pointBegin=\"6 месяцев\"\r\n              pointMedium=\"3 года 9 месяцев\"\r\n              pointEnd=\"7 лет\"\r\n              isDate={true}\r\n              externalValue={term}\r\n              setExternalValue={setTerm}\r\n            />\r\n\r\n            <div className=\"percent-wrapper\">\r\n              <label htmlFor=\"percent\" className=\"percent-label\">\r\n                Выберите годовую ставку{\" \"}\r\n              </label>\r\n              <input\r\n                name=\"percent\"\r\n                id=\"percent\"\r\n                className={alertPercent ? \"percent alert\" : \"percent\"}\r\n                value={percent}\r\n                onClick={skipProcent}\r\n                onChange={changeInputHandler}\r\n                onBlur={handleBlur}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"calculator-buttons\">\r\n            <div\r\n              className={\r\n                alertButton ? \"calculator-button alert\" : \"calculator-button\"\r\n              }\r\n              onClick={handleSaveButton}\r\n            >\r\n              <p>сохранить</p>\r\n            </div>\r\n\r\n            <div\r\n              className=\"calculator-button\"\r\n              onClick={(event) =>\r\n                handleCalculate(event, sumValue, percent, term)\r\n              }\r\n            >\r\n              {isLoading ? (\r\n                <span className=\"spinner\"></span>\r\n              ) : (\r\n                <p>рассчитать</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div className=\"params-output-wrapper\">\r\n        <div className=\"result-sum-wrapper\">\r\n          <div className=\"result-title\">\r\n            <h3>Ежемесячный платеж составляет</h3>\r\n          </div>\r\n          <div className=\"result-sum\">\r\n            {isLoading ? (\r\n              <span className=\"spinner-sum\"></span>\r\n            ) : (\r\n              <h4>{monthSum}</h4>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import { FC, useEffect, useState } from \"react\";\r\nimport \"./PaymentChart.scss\";\r\nimport {\r\n  Chart,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Filler,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { IPayment } from \"../store/services/types\";\r\n\r\nChart.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Filler,\r\n  Legend\r\n);\r\n\r\nexport interface IPaymentChart {\r\n  chartData: IPayment[];\r\n}\r\n\r\nconst PaymentChart: FC<IPaymentChart> = ({ chartData }) => {\r\n  const [xData, setXData] = useState<number[]>([]);\r\n  const [yData, setYData] = useState<number[]>([]);\r\n\r\n  const [yField, setYField] = useState<string>(\"interest\");\r\n  const [fontSize, setFontSize] = useState<number>(14);\r\n  const [pointRadius, setPointRadius] = useState<number>(4);\r\n\r\n  const data = {\r\n    labels: xData,\r\n    datasets: [\r\n      {\r\n        label: \"График\",\r\n        data: yData,\r\n        fill: true,\r\n        borderWidth: 2,\r\n        borderColor: \"rgba(0, 170, 230,0.9)\",\r\n        backgroundColor: (context: any) => {\r\n          const chart = context.chart;\r\n          const ctx = chart.ctx;\r\n          const chartArea = chart.chartArea;\r\n\r\n          if (!chartArea) {\r\n            return null;\r\n          }\r\n\r\n          const gradient = ctx.createLinearGradient(\r\n            chartArea.left,\r\n            chartArea.top,\r\n            chartArea.left,\r\n            chartArea.bottom\r\n          );\r\n\r\n          gradient.addColorStop(0, \"rgba(0, 170, 230,1)\");\r\n          gradient.addColorStop(1, \"rgba(0, 170, 230,0.2)\");\r\n\r\n          return gradient;\r\n        },\r\n        tension: 0.4,\r\n        pointRadius: pointRadius,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          autoSkip: true,\r\n          maxRotation: 0,\r\n          font: {\r\n            size: fontSize,\r\n          },\r\n        },\r\n        border: {\r\n          color: \"rgba(0, 170, 230,1)\",\r\n        },\r\n        grid: {\r\n          color: \"rgba(0, 170, 230,0.1)\",\r\n        },\r\n      },\r\n      y: {\r\n        ticks: {\r\n          autoSkip: true,\r\n          maxRotation: 0,\r\n          font: {\r\n            size: fontSize,\r\n          },\r\n        },\r\n        border: {\r\n          color: \"rgba(0, 170, 230,1)\",\r\n        },\r\n        grid: {\r\n          color: \"rgba(0, 170, 230,0.1)\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (yField && chartData) {\r\n      let _xData: number[] = [];\r\n      let _yData: number[] = [];\r\n\r\n      for (let i = 0; i < chartData.length; i++) {\r\n        _xData.push(i + 1);\r\n\r\n        let y = chartData[i][yField];\r\n\r\n        if (typeof y === \"number\") {\r\n          _yData.push(y);\r\n        }\r\n      }\r\n\r\n      setXData(_xData);\r\n      setYData(_yData);\r\n    }\r\n  }, [yField, chartData]);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (window.innerWidth < 660 && window.innerWidth > 440) {\r\n        setFontSize(12);\r\n      }\r\n\r\n      if (window.innerWidth < 440) {\r\n        setFontSize(10);\r\n        setPointRadius(6);\r\n      }\r\n\r\n      if (window.innerWidth > 660) {\r\n        setFontSize(14);\r\n      }\r\n    };\r\n\r\n    handleResize();\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"payment-chart\">\r\n      <div className=\"select-wrapper\">\r\n        <label htmlFor=\"y-field\" className=\"select-label\">\r\n          Вы можете выбрать поле по которому будет построен график:{\" \"}\r\n        </label>\r\n        <select\r\n          name=\"y-field\"\r\n          id=\"y-field\"\r\n          className=\"y-field\"\r\n          value={yField}\r\n          onChange={(event) => setYField(event.target.value)}\r\n        >\r\n          <option value=\"interest\">Оплата процентов</option>\r\n          <option value=\"paymentAmount\">Основной долг</option>\r\n          <option value=\"principal\">Платеж в месяц</option>\r\n          <option value=\"remainingBalance\">Остаток погашения</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"line-chart-wrapper\">\r\n        <Line data={data} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentChart;\r\n","import { FC, MouseEvent } from \"react\";\r\n\r\nimport download from \"../../../assets/ui/download.webp\";\r\n\r\nimport \"./DownloadButton.scss\";\r\n\r\nexport interface IDownloadButton {\r\n  downloadButtonFn: () => void;\r\n}\r\n\r\nconst DownloadButton: FC<IDownloadButton> = ({ downloadButtonFn }) => {\r\n  const handleDownload = (event: MouseEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n\r\n    downloadButtonFn();\r\n  };\r\n\r\n  return (\r\n    <div className=\"download-button\" onClick={handleDownload}>\r\n      <img src={download} alt=\"#\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownloadButton;\r\n","import { FC, useRef } from \"react\";\r\nimport \"./PaymentSchedule.scss\";\r\nimport { IPayment } from \"../../store/services/types\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootType } from \"../../store\";\r\n\r\nimport download from \"../../assets/ui/download.webp\";\r\n\r\nimport html2pdf from \"html2pdf.js\";\r\n\r\nimport DownloadButton from \"../UI/download-button/DownloadButton\";\r\n\r\nexport interface IPaymentSchedule {\r\n  tableData: IPayment[];\r\n}\r\n\r\nconst PaymentSchedule: FC<IPaymentSchedule> = ({ tableData }) => {\r\n  const { isAuth } = useSelector((state: RootType) => state.userSlice);\r\n\r\n  const paramRef = useRef<HTMLTableElement>(null);\r\n\r\n  const handlePrintPdf = () => {\r\n    if (paramRef.current) {\r\n      const opt = {\r\n        margin: 10,\r\n        filename: \"document.pdf\",\r\n        image: { type: \"jpeg\", quality: 0.98 },\r\n        html2canvas: { scale: 2, useCORS: true },\r\n        jsPDF: { unit: \"mm\", format: \"a4\", orientation: \"portrait\" },\r\n        pagebreak: { mode: [\"avoid-all\", \"css\", \"legacy\"] },\r\n      };\r\n\r\n      html2pdf().set(opt).from(paramRef.current).save();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-schedule\">\r\n      {isAuth ? (\r\n        <div className=\"download-wrapper\">\r\n          <DownloadButton downloadButtonFn={handlePrintPdf} />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <table\r\n        className={isAuth ? \"table auth\" : \"table\"}\r\n        id=\"table\"\r\n        ref={paramRef}\r\n      >\r\n        <thead className=\"thead\">\r\n          <tr>\r\n            <td>Год/месяц</td>\r\n            <td>Оплата процентов</td>\r\n            <td>Основной долг</td>\r\n            <td>Платеж в месяц</td>\r\n            <td>Остаток погашения</td>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody className={tableData.length > 15 ? \"tbody long\" : \"tbody\"}>\r\n          {tableData.length ? (\r\n            tableData.map((row, index) => (\r\n              <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{row.interest}</td>\r\n                <td>{row.paymentAmount}</td>\r\n                <td>{row.principal}</td>\r\n                <td>{row.remainingBalance}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td>Данных пока нет</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentSchedule;\r\n","import { FC, MouseEvent, useEffect, useState, useRef, memo } from \"react\";\r\n\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useCalculateMutation } from \"../../store/services/endpoints/loanApi\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleAlert } from \"../../store/features/alertSlice\";\r\nimport { setHightBorderSum } from \"../../store/features/paymentSlice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { handleError } from \"../../errorTypeGuard\";\r\n\r\nimport Calculator from \"../../components/calculator/Calculator\";\r\nimport { ILoan, IPayment } from \"../../store/services/types\";\r\n\r\nimport \"./MainPage.scss\";\r\n\r\nimport PaymentChart from \"../../chart/PaymentChart\";\r\nimport PaymentSchedule from \"../../components/payment-schedule/PaymentSchedule\";\r\nimport { RootType } from \"../../store\";\r\n\r\nconst MainPage: FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { hightBorderSum } = useSelector(\r\n    (state: RootType) => state.paymentSlice\r\n  );\r\n\r\n  const location = useLocation();\r\n\r\n  const [triggerCalculate, { isError, isLoading, isSuccess, data, error }] =\r\n    useCalculateMutation();\r\n\r\n  const [tableData, setTableData] = useState<IPayment[]>([]);\r\n\r\n  const [monthSum, setMonthSum] = useState<string>(\"16 220.95 ₽\");\r\n\r\n  const transformRate = (rate: string): number =>\r\n    rate.split(\" \").reduce<number>((acc, char, index, arr) => {\r\n      if (char === \"год\" || char === \"года\" || char === \"лет\")\r\n        return (acc += +arr[index - 1] * 12);\r\n\r\n      if (char === \"месяцев\" || char === \"мес.\")\r\n        return (acc += +arr[index - 1]);\r\n\r\n      return acc;\r\n    }, 0);\r\n\r\n  const getHightSumBorder = (payments: IPayment[]): number =>\r\n    Math.floor(\r\n      payments.reduce<number>((acc, prev) => (acc += prev.interest), 0) +\r\n        payments[0].paymentAmount\r\n    );\r\n\r\n  const handleCalculate = (\r\n    event: MouseEvent<HTMLDivElement>,\r\n    sumValue: string,\r\n    percent: string,\r\n    term: string\r\n  ): void => {\r\n    event.preventDefault();\r\n\r\n    !isLoading &&\r\n      triggerCalculate({\r\n        amount: +sumValue.replace(\" ₽\", \"\").split(\" \").join(\"\"),\r\n        interestRate: +percent.replace(\" %\", \"\"),\r\n        termInMonth: +transformRate(term),\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isSuccess && isError) {\r\n      handleError(error)?.status === 400 &&\r\n        dispatch(\r\n          toggleAlert({\r\n            isAlert: true,\r\n            isAuthAlert: false,\r\n            alertText: \"Некорректные данные!\",\r\n          })\r\n        );\r\n    }\r\n\r\n    if (isSuccess && !isError) {\r\n      const responseData = data as ILoan;\r\n\r\n      setTableData(responseData.payment.paymentDetails);\r\n      setMonthSum(\r\n        `${responseData.payment.paymentDetails[0].principal}`\r\n          .split(\".\")\r\n          .map((elem, key) =>\r\n            key === 0\r\n              ? elem\r\n                  .split(\"\")\r\n                  .reverse()\r\n                  .map((char, index) => {\r\n                    return (index + 1) % 3 === 0 ? ` ${char}` : char;\r\n                  })\r\n                  .reverse()\r\n              : `.${elem}`\r\n          )\r\n          .flat(1)\r\n          .join(\"\") + \" ₽\"\r\n      );\r\n\r\n      dispatch(\r\n        setHightBorderSum(\r\n          getHightSumBorder(responseData.payment.paymentDetails)\r\n        )\r\n      );\r\n    }\r\n  }, [isSuccess, isError, error, data]);\r\n\r\n  useEffect(() => {\r\n    !hightBorderSum &&\r\n      triggerCalculate({ amount: 100000, interestRate: 13, termInMonth: 6 });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === \"/\")\r\n      triggerCalculate({ amount: 100000, interestRate: 13, termInMonth: 6 });\r\n  }, [location]);\r\n\r\n  return (\r\n    <main className=\"main-page\">\r\n      <header className=\"main-header\">\r\n        <div className=\"main-title\">\r\n          <h1>Кредитный калькулятор Т1</h1>\r\n        </div>\r\n        <div className=\"main-description\">\r\n          <p>\r\n            Наш продукт - это кредитный трекер открытых позиций и калькулятор,\r\n            для физических лиц. Приложение рассчитывает графики платежей по\r\n            кредиту, и сохраняет их для авторизованных пользователей. Данные\r\n            можно посмотреть в личном кабинете приложения, или получить в виде\r\n            JSON, отправив запрос с другого сервиса. Мы имеем частично открытое\r\n            api, предоставляющее возможность любому желающему интегрировать наш\r\n            сервис в свое приложение.\r\n          </p>\r\n        </div>\r\n      </header>\r\n      <Calculator\r\n        handleCalculate={handleCalculate}\r\n        isLoading={isLoading}\r\n        monthSum={monthSum}\r\n        setMonthSum={setMonthSum}\r\n      />\r\n      <PaymentChart chartData={data?.payment?.paymentDetails as IPayment[]} />\r\n\r\n      <div>\r\n        <PaymentSchedule tableData={tableData} />\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"names":["handleError","error","status","isFetchBaseQueryError","loanApi","serviceApi","injectEndpoints","endpoints","builder","calculate","mutation","query","loan","url","method","headers","body","amount","interestRate","termInMonth","save","useCalculateMutation","useLazySaveQuery","_ref","rangeText","preId","min","max","defaultValue","pointBegin","pointMedium","pointEnd","isDate","externalValue","setExternalValue","dispatch","useDispatch","rangeRef","useRef","rangeValue","setRangeValue","useState","isAlert","setIsAlert","setCoordX","coordX","current","style","background","handleValueInput","event","isRange","input","target","currentPosition","selectionStart","currentValue","needPosition","value","replace","inputValue","split","map","char","trim","join","test","toggleAlert","isAuthAlert","alertText","Number","Math","ceil","result","reverse","id","length","setTimeout","setSelectionRange","months","years","floor","useEffect","_jsxs","className","children","_jsx","type","name","onChange","ref","htmlFor","onClick","startPosition","reduce","acc","index","arr","onBlur","isSum","_current","match","res","chars","i","handleBlur","handleCalculate","isLoading","monthSum","setMonthSum","triggerSave","isError","isSuccess","data","isSaving","isAuth","useSelector","state","userSlice","sumValue","setSumValue","term","setTerm","percent","setPercent","alertButton","setAlertButton","alertPercent","setAlertPercent","console","log","RangeInput","currentPercent","_num","preventDefault","Chart","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Filler","Legend","chartData","xData","setXData","yData","setYData","yField","setYField","fontSize","setFontSize","pointRadius","setPointRadius","labels","datasets","label","fill","borderWidth","borderColor","backgroundColor","context","chart","ctx","chartArea","gradient","createLinearGradient","left","top","bottom","addColorStop","tension","options","plugins","legend","display","scales","x","ticks","autoSkip","maxRotation","font","size","border","color","grid","y","_xData","_yData","push","handleResize","window","innerWidth","addEventListener","removeEventListener","Line","downloadButtonFn","src","download","alt","tableData","paramRef","DownloadButton","handlePrintPdf","opt","margin","filename","image","quality","html2canvas","scale","useCORS","jsPDF","unit","format","orientation","pagebreak","mode","html2pdf","set","from","row","interest","paymentAmount","principal","remainingBalance","MainPage","_data$payment","hightBorderSum","paymentSlice","location","useLocation","triggerCalculate","setTableData","_handleError","payments","responseData","payment","paymentDetails","elem","key","flat","setHightBorderSum","prev","pathname","Calculator","rate","PaymentChart","PaymentSchedule"],"sourceRoot":""}