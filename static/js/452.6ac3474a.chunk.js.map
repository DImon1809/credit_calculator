{"version":3,"file":"static/js/452.6ac3474a.chunk.js","mappings":"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","sources":["components/UI/range-input/RangeInput.tsx","components/calculator/Calculator.tsx","testData.ts","chart/PaymentChart.tsx","components/payment-schedule/PaymentSchedule.tsx","pages/main-page/MainPage.tsx"],"sourcesContent":["import {\r\n  FC,\r\n  ChangeEvent,\r\n  useRef,\r\n  Dispatch,\r\n  SetStateAction,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport \"./RangeInput.scss\";\r\n\r\nexport interface IRangeInput {\r\n  rangeText: string;\r\n  preId: string;\r\n  min: string;\r\n  max: string;\r\n  defaultValue?: string;\r\n  pointBegin: string;\r\n  pointMedium: string;\r\n  pointEnd: string;\r\n  isDate: boolean;\r\n  externalValue: string;\r\n  setExternalValue: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nconst RangeInput: FC<IRangeInput> = ({\r\n  rangeText,\r\n  preId,\r\n  min,\r\n  max,\r\n  defaultValue,\r\n  pointBegin,\r\n  pointMedium,\r\n  pointEnd,\r\n  isDate,\r\n  externalValue,\r\n  setExternalValue,\r\n}) => {\r\n  const rangeRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [rangeValue, setRangeValue] = useState<number>(0);\r\n\r\n  const handleSumInput = (event: ChangeEvent<HTMLInputElement>) => {\r\n    if (rangeRef.current) {\r\n      let coordX: number = Number(event.target.value);\r\n\r\n      rangeRef.current.style.background = `linear-gradient(90deg, #00aae6 ${coordX}%, #fff ${coordX}%)`;\r\n\r\n      setRangeValue(coordX);\r\n\r\n      if (!isDate) {\r\n        const result: string = `${coordX === 0 ? 100000 : coordX * 400000}`\r\n          .split(\"\")\r\n          .reverse()\r\n          .map((char, id) => (id % 3 === 0 ? `${char} ` : char))\r\n          .reverse()\r\n          .join(\"\");\r\n\r\n        return setExternalValue(result + \" ₽\");\r\n      }\r\n\r\n      if (isDate) {\r\n        if (coordX === 0) return setExternalValue(\"6 месяцев\");\r\n\r\n        let months: number | string = Math.ceil(coordX * 0.78) + 6;\r\n        let years: number | string = Math.floor(months / 12);\r\n\r\n        if (years === 0) {\r\n          years = \"\";\r\n          months = months + \" месяцев\";\r\n        } else {\r\n          months = months - years * 12;\r\n\r\n          months = months === 0 ? \"\" : `${months} месяцев`;\r\n\r\n          if (years === 1) years = `${years} год`;\r\n\r\n          if (+years < 5 && +years > 1) years = `${years} года`;\r\n\r\n          if (+years > 4 && +years <= 7) years = `${years} лет`;\r\n        }\r\n\r\n        return setExternalValue(`${years} ${months}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"range-input-wrapper\">\r\n      <input\r\n        type=\"range\"\r\n        name=\"range-input\"\r\n        id={`range-input-${preId}`}\r\n        className=\"range-input\"\r\n        min={min}\r\n        max={max}\r\n        value={rangeValue}\r\n        onChange={handleSumInput}\r\n        ref={rangeRef}\r\n      />\r\n      <label htmlFor={`range-input-${preId}`}>{rangeText}</label>\r\n      <div className=\"value-wrapper\">\r\n        <p>{externalValue}</p>\r\n      </div>\r\n      <div className=\"input-points\">\r\n        <ul>\r\n          <li className=\"point\">{pointBegin}</li>\r\n          <li className=\"point\">{pointMedium}</li>\r\n          <li className=\"point\">{pointEnd}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RangeInput;\r\n","import { FC, MouseEvent, useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleAlert } from \"../../store/features/alertSlice\";\r\n\r\nimport RangeInput from \"../UI/range-input/RangeInput\";\r\n\r\nimport \"./Calculator.scss\";\r\n\r\nconst Calculator: FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [sumValue, setSumValue] = useState<string>(\"100 000 ₽\");\r\n  const [term, setTerm] = useState<string>(\"6 месяцев\");\r\n  const [percent, setPercent] = useState<string>(\"13%\");\r\n\r\n  const [alertButton, setAlertButton] = useState<boolean>(false);\r\n\r\n  const handleSaveButton = (event: MouseEvent<HTMLDivElement>): void => {\r\n    event.preventDefault();\r\n\r\n    !alertButton &&\r\n      dispatch(\r\n        toggleAlert({\r\n          alertText: \"Сначала необходимо зайти в личный кабинет!\",\r\n          isAlert: true,\r\n          isAuthAlert: true,\r\n        })\r\n      );\r\n\r\n    setAlertButton(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (alertButton) {\r\n      setTimeout(() => {\r\n        setAlertButton(false);\r\n      }, 2000);\r\n    }\r\n  }, [alertButton]);\r\n\r\n  return (\r\n    <div className=\"calculator-wrapper\">\r\n      <div className=\"params-input-wrapper\">\r\n        <div className=\"calculator-title\">\r\n          <h2>Рассчитать сумму</h2>\r\n        </div>\r\n        <form className=\"params-form\">\r\n          <div className=\"params\">\r\n            <RangeInput\r\n              rangeText=\"Какую сумму желаете взять?\"\r\n              preId=\"sum\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              pointBegin=\"100 тыс ₽\"\r\n              pointMedium=\"20 млн ₽\"\r\n              pointEnd=\"40 млн ₽\"\r\n              isDate={false}\r\n              externalValue={sumValue}\r\n              setExternalValue={setSumValue}\r\n            />\r\n\r\n            <RangeInput\r\n              rangeText=\"На какой срок желаете взять?\"\r\n              preId=\"term\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              pointBegin=\"6 месяцев\"\r\n              pointMedium=\"3 года 9 месяцев\"\r\n              pointEnd=\"7 лет\"\r\n              isDate={true}\r\n              externalValue={term}\r\n              setExternalValue={setTerm}\r\n            />\r\n\r\n            <div className=\"percent-wrapper\">\r\n              <label htmlFor=\"percent\" className=\"percent-label\">\r\n                Выберите годовую ставку{\" \"}\r\n              </label>\r\n              <select\r\n                name=\"percent\"\r\n                id=\"percent\"\r\n                className=\"percent\"\r\n                value={percent}\r\n                onChange={(event) => setPercent(event.target.value)}\r\n              >\r\n                <option value=\"13\">13%</option>\r\n                <option value=\"18\">18%</option>\r\n                <option value=\"20\">20%</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"calculator-buttons\">\r\n            <div\r\n              className={\r\n                alertButton ? \"calculator-button alert\" : \"calculator-button\"\r\n              }\r\n              onClick={handleSaveButton}\r\n            >\r\n              <p>сохранить</p>\r\n            </div>\r\n\r\n            <div className=\"calculator-button\">\r\n              <p>рассчитать</p>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div className=\"params-output-wrapper\">\r\n        <div className=\"result-sum-wrapper\">\r\n          <div className=\"result-title\">\r\n            <h3>Ежемесячный платеж составляет</h3>\r\n          </div>\r\n          <div className=\"result-sum\">\r\n            <h4>120 000 ₽</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","export const testData: {\r\n  payOfInter: string;\r\n  principal: string;\r\n  perMonth: string;\r\n  repayment: string;\r\n  [key: string]: string;\r\n}[] = [\r\n  {\r\n    payOfInter: \"97 000 ₽\",\r\n    principal: \"320 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"8 000 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"94 430 ₽\",\r\n    principal: \"310 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"7 600 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"91 000 ₽\",\r\n    principal: \"306 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"7 000 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"76 000 ₽\",\r\n    principal: \"280 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"6 060 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"66 000 ₽\",\r\n    principal: \"240 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"5 000 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"27 000 ₽\",\r\n    principal: \"220 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"4 000 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"20 000 ₽\",\r\n    principal: \"320 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"3 000 000 ₽\",\r\n  },\r\n];\r\n","import { FC, useEffect, useState } from \"react\";\r\n\r\nimport { testData } from \"../testData\";\r\n\r\nimport \"./PaymentChart.scss\";\r\n\r\nimport {\r\n  Chart,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Filler,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nChart.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Filler,\r\n  Legend\r\n);\r\n\r\nconst PaymentChart: FC = () => {\r\n  const [xData, setXData] = useState<number[]>([]);\r\n  const [yData, setYData] = useState<number[]>([]);\r\n\r\n  const [yField, setYField] = useState<string>(\"payOfInter\");\r\n  const [fontSize, setFontSize] = useState<number>(14);\r\n\r\n  const data = {\r\n    labels: xData,\r\n    datasets: [\r\n      {\r\n        label: \"График\",\r\n        data: yData,\r\n        fill: true,\r\n        borderWidth: 2,\r\n        // borderColor: \"rgba(21, 128, 195, 0.9)\",\r\n        borderColor: \"rgba(0, 170, 230,0.9)\",\r\n        backgroundColor: (context: any) => {\r\n          const chart = context.chart;\r\n          const ctx = chart.ctx;\r\n          const chartArea = chart.chartArea;\r\n\r\n          if (!chartArea) {\r\n            return null;\r\n          }\r\n\r\n          const gradient = ctx.createLinearGradient(\r\n            chartArea.left,\r\n            chartArea.top,\r\n            chartArea.left,\r\n            chartArea.bottom\r\n          );\r\n\r\n          gradient.addColorStop(0, \"rgba(0, 170, 230,1)\");\r\n          gradient.addColorStop(1, \"rgba(0, 170, 230,0.2)\");\r\n\r\n          return gradient;\r\n        },\r\n        tension: 0.4,\r\n        pointRadius: 4,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          autoSkip: true,\r\n          maxRotation: 0,\r\n          font: {\r\n            size: fontSize,\r\n          },\r\n        },\r\n\r\n        border: {\r\n          color: \"rgba(0, 170, 230,1)\",\r\n        },\r\n\r\n        grid: {\r\n          color: \"rgba(0, 170, 230,0.1)\",\r\n        },\r\n      },\r\n\r\n      y: {\r\n        ticks: {\r\n          autoSkip: true,\r\n          maxRotation: 0,\r\n          font: {\r\n            size: fontSize,\r\n          },\r\n        },\r\n\r\n        border: {\r\n          color: \"rgba(0, 170, 230,1)\",\r\n        },\r\n\r\n        grid: {\r\n          color: \"rgba(0, 170, 230,0.1)\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (yField) {\r\n      let _xData = [];\r\n      let _yData = [];\r\n\r\n      for (let i = 0; i < testData.length; i++) {\r\n        _xData.push(Number(i) + 1);\r\n\r\n        let y = Number(testData[i][yField].replace(/\\s|₽/gi, \"\"));\r\n\r\n        _yData.push(y);\r\n      }\r\n\r\n      setXData(_xData);\r\n      setYData(_yData);\r\n    }\r\n  }, [yField]);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (window.innerWidth < 660 && window.innerWidth > 440) {\r\n        setFontSize(12);\r\n      }\r\n\r\n      if (window.innerWidth < 440) {\r\n        setFontSize(10);\r\n      }\r\n\r\n      if (window.innerWidth > 660) {\r\n        setFontSize(14);\r\n      }\r\n    };\r\n\r\n    handleResize();\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"payment-chart\">\r\n      <div className=\"select-wrapper\">\r\n        <label htmlFor=\"y-field\" className=\"select-label\">\r\n          Вы можете выбрать поле по которому будет построен график:{\" \"}\r\n        </label>\r\n        <select\r\n          name=\"y-field\"\r\n          id=\"y-field\"\r\n          className=\"y-field\"\r\n          value={yField}\r\n          onChange={(event) => setYField(event.target.value)}\r\n        >\r\n          <option value=\"payOfInter\">Оплата процентов</option>\r\n          <option value=\"principal\">Основной долг</option>\r\n          <option value=\"perMonth\">Платеж в месяц</option>\r\n          <option value=\"repayment\">Остаток погашения</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"line-chart-wrapper\">\r\n        <Line data={data} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentChart;\r\n","import { FC } from \"react\";\r\n\r\nimport \"./PaymentSchedule.scss\";\r\n\r\nimport { testData } from \"../../testData\";\r\n\r\nconst PaymentSchedule: FC = () => {\r\n  return (\r\n    <div className=\"payment-schedule\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead\">\r\n          <tr>\r\n            <td>Год/месяц</td>\r\n            <td>Оплата процентов</td>\r\n            <td>Основной долг</td>\r\n            <td>Платеж в месяц</td>\r\n            <td>Остаток погашения</td>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody className=\"tbody\">\r\n          {testData.map((row, index) => (\r\n            <tr key={index}>\r\n              <td>{index + 1}</td>\r\n              <td>{row.payOfInter}</td>\r\n              <td>{row.principal}</td>\r\n              <td>{row.perMonth}</td>\r\n              <td>{row.repayment}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentSchedule;\r\n","import { FC } from \"react\";\r\n\r\nimport Calculator from \"../../components/calculator/Calculator\";\r\n\r\nimport \"./MainPage.scss\";\r\n\r\nimport PaymentChart from \"../../chart/PaymentChart\";\r\nimport PaymentSchedule from \"../../components/payment-schedule/PaymentSchedule\";\r\n\r\nconst MainPage: FC = () => {\r\n  return (\r\n    <main className=\"main-page\">\r\n      <header className=\"main-header\">\r\n        <div className=\"main-title\">\r\n          <h1>Кредитный калькулятор Т1</h1>\r\n        </div>\r\n        <div className=\"main-description\">\r\n          <p>\r\n            Наш продукт - это кредитный трекер открытых позиций и калькулятор,\r\n            для физических лиц. Приложение рассчитывает графики платежей по\r\n            кредиту, и сохраняет их для авторизованных пользователей. Данные\r\n            можно посмотреть в личном кабинете приложения, или получить в виде\r\n            JSON, отправив запрос с другого сервиса. Мы имеем частично открытое\r\n            api, предоставляющее возможность любому желающему интегрировать наш\r\n            сервис в свое приложение.\r\n          </p>\r\n        </div>\r\n      </header>\r\n      <Calculator />\r\n      <PaymentChart />\r\n      <PaymentSchedule />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"names":["_ref","rangeText","preId","min","max","defaultValue","pointBegin","pointMedium","pointEnd","isDate","externalValue","setExternalValue","rangeRef","useRef","rangeValue","setRangeValue","useState","_jsxs","className","children","_jsx","type","name","id","value","onChange","event","current","coordX","Number","target","style","background","result","split","reverse","map","char","join","months","Math","ceil","years","floor","ref","htmlFor","Calculator","dispatch","useDispatch","sumValue","setSumValue","term","setTerm","percent","setPercent","alertButton","setAlertButton","useEffect","setTimeout","RangeInput","onClick","preventDefault","toggleAlert","alertText","isAlert","isAuthAlert","testData","payOfInter","principal","perMonth","repayment","Chart","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Filler","Legend","PaymentChart","xData","setXData","yData","setYData","yField","setYField","fontSize","setFontSize","data","labels","datasets","label","fill","borderWidth","borderColor","backgroundColor","context","chart","ctx","chartArea","gradient","createLinearGradient","left","top","bottom","addColorStop","tension","pointRadius","options","plugins","legend","display","scales","x","ticks","autoSkip","maxRotation","font","size","border","color","grid","y","_xData","_yData","i","length","push","replace","handleResize","window","innerWidth","addEventListener","removeEventListener","Line","PaymentSchedule","row","index","MainPage"],"sourceRoot":""}