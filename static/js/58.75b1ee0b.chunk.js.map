{"version":3,"file":"static/js/58.75b1ee0b.chunk.js","mappings":"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","sources":["../node_modules/@kurkle/color/dist/color.esm.js","../node_modules/chart.js/src/helpers/helpers.core.ts","../node_modules/chart.js/src/helpers/helpers.math.ts","../node_modules/chart.js/src/helpers/helpers.collection.ts","../node_modules/chart.js/src/helpers/helpers.extras.ts","../node_modules/chart.js/src/helpers/helpers.easing.ts","../node_modules/chart.js/src/helpers/helpers.color.ts","../node_modules/chart.js/src/core/core.animations.defaults.js","../node_modules/chart.js/src/helpers/helpers.intl.ts","../node_modules/chart.js/src/core/core.ticks.js","../node_modules/chart.js/src/core/core.defaults.js","../node_modules/chart.js/src/core/core.layouts.defaults.js","../node_modules/chart.js/src/core/core.scale.defaults.js","../node_modules/chart.js/src/helpers/helpers.canvas.ts","../node_modules/chart.js/src/helpers/helpers.options.ts","../node_modules/chart.js/src/helpers/helpers.config.ts","../node_modules/chart.js/src/helpers/helpers.curve.ts","../node_modules/chart.js/src/helpers/helpers.dom.ts","../node_modules/chart.js/src/helpers/helpers.interpolation.ts","../node_modules/chart.js/src/helpers/helpers.rtl.ts","../node_modules/chart.js/src/helpers/helpers.segment.js","../node_modules/chart.js/src/core/core.animator.js","../node_modules/chart.js/src/core/core.animation.js","../node_modules/chart.js/src/core/core.animations.js","../node_modules/chart.js/src/core/core.datasetController.js","../node_modules/chart.js/src/controllers/controller.line.js","../node_modules/chart.js/src/core/core.adapters.ts","../node_modules/chart.js/src/core/core.interaction.js","../node_modules/chart.js/src/core/core.layouts.js","../node_modules/chart.js/src/platform/platform.base.js","../node_modules/chart.js/src/platform/platform.basic.js","../node_modules/chart.js/src/platform/platform.dom.js","../node_modules/chart.js/src/core/core.element.ts","../node_modules/chart.js/src/core/core.scale.autoskip.js","../node_modules/chart.js/src/core/core.scale.js","../node_modules/chart.js/src/core/core.typedRegistry.js","../node_modules/chart.js/src/core/core.registry.js","../node_modules/chart.js/src/core/core.plugins.js","../node_modules/chart.js/src/core/core.config.js","../node_modules/chart.js/src/core/core.controller.js","../node_modules/chart.js/src/platform/index.js","../node_modules/chart.js/src/elements/element.line.js","../node_modules/chart.js/src/elements/element.point.ts","../node_modules/chart.js/src/plugins/plugin.filler/filler.segment.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.helper.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.options.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.stack.js","../node_modules/chart.js/src/plugins/plugin.filler/simpleArc.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.target.js","../node_modules/chart.js/src/plugins/plugin.filler/filler.drawing.js","../node_modules/chart.js/src/plugins/plugin.filler/index.js","../node_modules/chart.js/src/plugins/plugin.legend.js","../node_modules/chart.js/src/plugins/plugin.title.js","../node_modules/chart.js/src/plugins/plugin.subtitle.js","../node_modules/chart.js/src/plugins/plugin.tooltip.js","../node_modules/chart.js/src/scales/scale.category.js","../node_modules/chart.js/src/scales/scale.linearbase.js","../node_modules/chart.js/src/scales/scale.linear.js","../node_modules/chart.js/src/scales/scale.logarithmic.js","../node_modules/chart.js/src/scales/scale.radialLinear.js","../node_modules/chart.js/src/scales/scale.time.js","../node_modules/react-chartjs-2/src/utils.ts","../node_modules/react-chartjs-2/src/chart.tsx","../node_modules/react-chartjs-2/src/typedCharts.tsx"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/**\n * @namespace Chart.helpers\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ActiveDataPoint, ChartEvent} from '../types/index.js';\n\n/**\n * An empty function that can be used, for example, for optional callback.\n */\nexport function noop() {\n  /* noop */\n}\n\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */\nexport const uid = (() => {\n  let id = 0;\n  return () => id++;\n})();\n\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isNullOrUndef(value: unknown): value is null | undefined {\n  return value === null || typeof value === 'undefined';\n}\n\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */\nexport function isArray<T = unknown>(value: unknown): value is T[] {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */\nexport function isObject(value: unknown): value is AnyObject {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */\nfunction isNumberFinite(value: unknown): value is number {\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\nexport {\n  isNumberFinite as isFinite,\n};\n\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\n\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\n\nexport const toPercentage = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : +value / dimension;\n\nexport const toDimension = (value: number | string, dimension: number) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\n\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\n  fn: T | undefined,\n  args: unknown[],\n  thisArg?: TA\n): R | undefined {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\n\n/**\n * Note(SB) for performance sake, this method should only be used when loopable type\n * is unknown or in none intensive code (not called often and small loopable). Else\n * it's preferable to use a regular for() loop and save extra function calls.\n * @param loopable - The object or array to be iterated.\n * @param fn - The function to call for each item.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n * @param [reverse] - If true, iterates backward on the loopable.\n */\nexport function each<T, TA>(\n  loopable: Record<string, T>,\n  fn: (this: TA, v: T, i: string) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[],\n  fn: (this: TA, v: T, i: number) => void,\n  thisArg?: TA,\n  reverse?: boolean\n): void;\nexport function each<T, TA>(\n  loopable: T[] | Record<string, T>,\n  fn: (this: TA, v: T, i: any) => void,\n  thisArg?: TA,\n  reverse?: boolean\n) {\n  let i: number, len: number, keys: string[];\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\n\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\n\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */\nexport function clone<T>(source: T): T {\n  if (isArray(source)) {\n    return source.map(clone) as unknown as T;\n  }\n\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n\n    return target;\n  }\n\n  return source;\n}\n\nfunction isValidKey(key: string) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\n\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\n\nexport interface MergeOptions {\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` with the given `options`.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @param [options] - Merging options:\n * @param [options.merger] - The merge method (key, target, source, options)\n * @returns The `target` object.\n */\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\nexport function merge<T, S1, S2, S3, S4>(\n  target: T,\n  source: [S1, S2, S3, S4],\n  options?: MergeOptions\n): T & S1 & S2 & S3 & S4;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n\n  if (!isObject(target)) {\n    return target as AnyObject;\n  }\n\n  options = options || {};\n  const merger = options.merger || _merger;\n  let current: AnyObject;\n\n  for (let i = 0; i < ilen; ++i) {\n    current = sources[i];\n    if (!isObject(current)) {\n      continue;\n    }\n\n    const keys = Object.keys(current);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, current, options as AnyObject);\n    }\n  }\n\n  return target;\n}\n\n/**\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n * @param target - The target object in which all sources are merged into.\n * @param source - Object(s) to merge into `target`.\n * @returns The `target` object.\n */\nexport function mergeIf<T>(target: T, source: []): T;\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  return merge<T>(target, source, {merger: _mergerIf});\n}\n\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\n  if (!isValidKey(key)) {\n    return;\n  }\n\n  const tval = target[key];\n  const sval = source[key];\n\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\n\n/**\n * @private\n */\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n      '\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\n\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n  '': v => v,\n  // default resolvers\n  x: o => o.x,\n  y: o => o.y\n};\n\n/**\n * @private\n */\nexport function _splitKey(key: string) {\n  const parts = key.split('.');\n  const keys: string[] = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\n\nfunction _getKeyResolver(key: string) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        // For backward compatibility:\n        // Chart.helpers.core resolveObjectKey should break at empty key\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\n\nexport function resolveObjectKey(obj: AnyObject, key: string): any {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\n\n/**\n * @private\n */\nexport function _capitalize(str: string) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\nexport const defined = (value: unknown) => typeof value !== 'undefined';\n\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\n\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * @param e - The event\n * @private\n */\nexport function _isClickEvent(e: ChartEvent) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n","import type {Point} from '../types/geometric.js';\nimport {isFinite as isFiniteNumber} from './helpers.core.js';\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */\n\nexport const PI = Math.PI;\nexport const TAU = 2 * PI;\nexport const PITAU = TAU + PI;\nexport const INFINITY = Number.POSITIVE_INFINITY;\nexport const RAD_PER_DEG = PI / 180;\nexport const HALF_PI = PI / 2;\nexport const QUARTER_PI = PI / 4;\nexport const TWO_THIRDS_PI = PI * 2 / 3;\n\nexport const log10 = Math.log10;\nexport const sign = Math.sign;\n\nexport function almostEquals(x: number, y: number, epsilon: number) {\n  return Math.abs(x - y) < epsilon;\n}\n\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */\nexport function niceNum(range: number) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\n\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */\nexport function _factorize(value: number) {\n  const result: number[] = [];\n  const sqrt = Math.sqrt(value);\n  let i: number;\n\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) { // if value is a square number\n    result.push(sqrt);\n  }\n\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\n\nexport function isNumber(n: unknown): n is number {\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\n}\n\nexport function almostWhole(x: number, epsilon: number) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\n\n/**\n * @private\n */\nexport function _setMinAndMaxByKey(\n  array: Record<string, number>[],\n  target: { min: number, max: number },\n  property: string\n) {\n  let i: number, ilen: number, value: number;\n\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\n\nexport function toRadians(degrees: number) {\n  return degrees * (PI / 180);\n}\n\nexport function toDegrees(radians: number) {\n  return radians * (180 / PI);\n}\n\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */\nexport function _decimalPlaces(x: number) {\n  if (!isFiniteNumber(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\n\n// Gets the angle from vertical upright to the point about a centre.\nexport function getAngleFromPoint(\n  centrePoint: Point,\n  anglePoint: Point\n) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n  if (angle < (-0.5 * PI)) {\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n  }\n\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\n\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */\nexport function _angleDiff(a: number, b: number) {\n  return (a - b + PITAU) % TAU - PI;\n}\n\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */\nexport function _normalizeAngle(a: number) {\n  return (a % TAU + TAU) % TAU;\n}\n\n/**\n * @private\n */\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\n\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */\nexport function _limitValue(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value));\n}\n\n/**\n * @param {number} value\n * @private\n */\nexport function _int16Range(value: number) {\n  return _limitValue(value, -32768, 32767);\n}\n\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n","import {_capitalize} from './helpers.core.js';\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param value - value to find\n * @param cmp\n * @private\n */\nexport function _lookup(\n  table: number[],\n  value: number,\n  cmp?: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup<T>(\n  table: T[],\n  value: number,\n  cmp: (value: number) => boolean\n): {lo: number, hi: number};\nexport function _lookup(\n  table: unknown[],\n  value: number,\n  cmp?: (value: number) => boolean\n) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid: number;\n\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return {lo, hi};\n}\n\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */\nexport const _lookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number,\n  last?: boolean\n) =>\n  _lookup(table, value, last\n    ? index => {\n      const ti = table[index][key];\n      return ti < value || ti === value && table[index + 1][key] === value;\n    }\n    : index => table[index][key] < value);\n\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */\nexport const _rlookupByKey = (\n  table: Record<string, number>[],\n  key: string,\n  value: number\n) =>\n  _lookup(table, value, index => table[index][key] >= value);\n\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */\nexport function _filterBetween(values: number[], min: number, max: number) {\n  let start = 0;\n  let end = values.length;\n\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\n\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\n\nexport interface ArrayListener<T> {\n  _onDataPush?(...item: T[]): void;\n  _onDataPop?(): void;\n  _onDataShift?(): void;\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\n  _onDataUnshift?(...item: T[]): void;\n}\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\n */\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n\n        return res;\n      }\n    });\n  });\n}\n\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\nexport function unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n\n  if (listeners.length > 0) {\n    return;\n  }\n\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n\n  delete array._chartjs;\n}\n\n/**\n * @param items\n */\nexport function _arrayUnique<T>(items: T[]) {\n  const set = new Set<T>(items);\n\n  if (set.size === items.length) {\n    return items;\n  }\n\n  return Array.from(set);\n}\n","import type {ChartMeta, PointElement} from '../types/index.js';\n\nimport {_limitValue} from './helpers.math.js';\nimport {_lookupByKey} from './helpers.collection.js';\n\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n\n/**\n* Request animation polyfill\n*/\nexport const requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\n\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */\nexport function throttled<TArgs extends Array<any>>(\n  fn: (...args: TArgs) => void,\n  thisArg: any,\n) {\n  let argsToUse = [] as TArgs;\n  let ticking = false;\n\n  return function(...args: TArgs) {\n    // Save the args for use later\n    argsToUse = args;\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, argsToUse);\n      });\n    }\n  };\n}\n\n/**\n * Debounces calling `fn` for `delay` ms\n */\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\n  let timeout;\n  return function(...args: TArgs) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\n\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\n/**\n * Return start and count of visible points.\n * @private\n */\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count = pointCount;\n\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, axis, min).lo,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        // @ts-expect-error Need to type _parsed\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        // @ts-expect-error Need to fix types on _lookupByKey\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n\n  return {start, count};\n}\n\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */\nexport function _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n","import {PI, TAU, HALF_PI} from './helpers.math.js';\n\nconst atEdge = (t: number) => t === 0 || t === 1;\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */\nconst effects = {\n  linear: (t: number) => t,\n\n  easeInQuad: (t: number) => t * t,\n\n  easeOutQuad: (t: number) => -t * (t - 2),\n\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n\n  easeInCubic: (t: number) => t * t * t,\n\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\n\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n\n  easeInQuart: (t: number) => t * t * t * t,\n\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\n\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n\n  easeInQuint: (t: number) => t * t * t * t * t,\n\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\n\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\n\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\n\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\n\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\n\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n\n  easeInOutElastic(t: number) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n\n  easeInBack(t: number) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n\n  easeOutBack(t: number) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n\n  easeInOutBack(t: number) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\n\n  easeOutBounce(t: number) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n\n  easeInOutBounce: (t: number) => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n} as const;\n\nexport type EasingFunction = keyof typeof effects\n\nexport default effects;\n","import {Color} from '@kurkle/color';\n\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n\n  return false;\n}\n\nexport function color(value: CanvasGradient): CanvasGradient;\nexport function color(value: CanvasPattern): CanvasPattern;\nexport function color(\n  value:\n  | string\n  | { r: number; g: number; b: number; a: number }\n  | [number, number, number]\n  | [number, number, number, number]\n): Color;\nexport function color(value) {\n  return isPatternOrGradient(value) ? value : new Color(value);\n}\n\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\nexport function getHoverColor(value: string): string;\nexport function getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\n\nexport function applyAnimationsDefaults(defaults) {\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined,\n  });\n\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n  });\n\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    },\n  });\n\n  defaults.describe('animations', {\n    _fallback: 'animation',\n  });\n\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0 // show immediately\n        },\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\n        },\n      }\n    }\n  });\n}\n","\nconst intlCache = new Map<string, Intl.NumberFormat>();\n\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\n\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\n  return getNumberFormat(locale, options).format(num);\n}\n","import {isArray} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {log10} from '../helpers/helpers.math.js';\n\n/**\n * Namespace to hold formatters for different types of ticks\n * @namespace Chart.Ticks.formatters\n */\nconst formatters = {\n  /**\n   * Formatter for value labels\n   * @method Chart.Ticks.formatters.values\n   * @param value the value to display\n   * @return {string|string[]} the label to display\n   */\n  values(value) {\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\n  },\n\n  /**\n   * Formatter for numeric ticks\n   * @method Chart.Ticks.formatters.numeric\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0'; // never show decimal places for 0\n    }\n\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\n\n    if (ticks.length > 1) {\n      // all ticks are small or there huge numbers; use scientific notation\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n\n      delta = calculateDelta(tickValue, ticks);\n    }\n\n    const logDelta = log10(Math.abs(delta));\n\n    // When datasets have values approaching Number.MAX_VALUE, the tick calculations might result in\n    // infinity and eventually NaN. Passing NaN for minimumFractionDigits or maximumFractionDigits\n    // will make the number formatter throw. So instead we check for isNaN and use a fallback value.\n    //\n    // toFixed has a max of 20 decimal places\n    const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n\n    return formatNumber(tickValue, locale, options);\n  },\n\n\n  /**\n   * Formatter for logarithmic ticks\n   * @method Chart.Ticks.formatters.logarithmic\n   * @param tickValue {number} the value to be formatted\n   * @param index {number} the position of the tickValue parameter in the ticks array\n   * @param ticks {object[]} the list of ticks being converted\n   * @return {string} string representation of the tickValue parameter\n   */\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n\n};\n\n\nfunction calculateDelta(tickValue, ticks) {\n  // Figure out how many digits to show\n  // The space between the first two ticks might be smaller than normal spacing\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    // not an integer\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nexport default {formatters};\n","import {getHoverColor} from '../helpers/helpers.color.js';\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core.js';\nimport {applyAnimationsDefaults} from './core.animations.defaults.js';\nimport {applyLayoutsDefaults} from './core.layouts.defaults.js';\nimport {applyScaleDefaults} from './core.scale.defaults.js';\n\nexport const overrides = Object.create(null);\nexport const descriptors = Object.create(null);\n\n/**\n * @param {object} node\n * @param {string} key\n * @return {object}\n */\nfunction getScope(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\n\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope(root, scope), values);\n  }\n  return merge(getScope(root, ''), scope);\n}\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Defaults {\n  constructor(_descriptors, _appliers) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n\n    this.describe(_descriptors);\n    this.apply(_appliers);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n\n  /**\n\t * @param {string} scope\n\t */\n  get(scope) {\n    return getScope(this, scope);\n  }\n\n  /**\n\t * @param {string|object} scope\n\t * @param {object} [values]\n\t */\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n\n  /**\n\t * Routes the named defaults to fallback to another scope/name.\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\n\t * fallback is evaluated at each access, so its always up to date.\n\t *\n\t * Example:\n\t *\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\n\t *   - reads the backgroundColor from defaults.color when undefined locally\n\t *\n\t * @param {string} scope Scope this route applies to.\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\n\t * @param {string} targetScope The namespace where those properties should be routed to.\n\t * Empty string ('') is the root of defaults.\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\n\t */\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope(this, scope);\n    const targetScopeObject = getScope(this, targetScope);\n    const privateName = '_' + name;\n\n    Object.defineProperties(scopeObject, {\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n\n  apply(appliers) {\n    appliers.forEach((apply) => apply(this));\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\n","export function applyLayoutsDefaults(defaults) {\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n}\n","import Ticks from './core.ticks.js';\n\nexport function applyScaleDefaults(defaults) {\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 3.0.0\n     */\n    bounds: 'ticks',\n\n    clip: true,\n\n    /**\n     * Addition grace added to max and reduced from min data value.\n     * @since 3.0.0\n     */\n    grace: 0,\n\n    // grid line settings\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n    },\n\n    border: {\n      display: true,\n      dash: [],\n      dashOffset: 0.0,\n      width: 1\n    },\n\n    // scale title\n    title: {\n      // display property\n      display: false,\n\n      // actual label\n      text: '',\n\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n\n    // label settings\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2,\n    }\n  });\n\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.border', 'color', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\n  });\n\n  defaults.describe('scales', {\n    _fallback: 'scale',\n  });\n\n  defaults.describe('scale.ticks', {\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: (name) => name !== 'backdropPadding',\n  });\n}\n","import type {\n  Chart,\n  Point,\n  FontSpec,\n  CanvasFontSpec,\n  PointStyle,\n  RenderTextOpts,\n  BackdropOptions\n} from '../types/index.js';\nimport type {\n  TRBL,\n  SplinePoint,\n  RoundedRect,\n  TRBLCorners\n} from '../types/geometric.js';\nimport {isArray, isNullOrUndef} from './helpers.core.js';\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math.js';\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nexport function toFontString(font: FontSpec) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @private\n */\nexport function _measureText(\n  ctx: CanvasRenderingContext2D,\n  data: Record<string, number>,\n  gc: string[],\n  longest: number,\n  string: string\n) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\n\ntype Thing = string | undefined | null\ntype Things = (Thing | Thing[])[]\n\n/**\n * @private\n */\n// eslint-disable-next-line complexity\nexport function _longestText(\n  ctx: CanvasRenderingContext2D,\n  font: string,\n  arrayOfThings: Things,\n  cache?: {data?: Record<string, number>, garbageCollect?: string[], font?: string}\n) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n\n  ctx.save();\n\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i: number, j: number, jlen: number, thing: Thing | Thing[], nestedThing: Thing | Thing[];\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n\n    // Undefined strings and arrays should not be measured\n    if (thing !== undefined && thing !== null && !isArray(thing)) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      // if it is an array lets measure each element\n      // to do maybe simplify this function a bit so we can do this more recursively?\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        // Undefined strings and arrays should not be measured\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n\n  ctx.restore();\n\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\n\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */\nexport function _alignPixel(chart: Chart, pixel: number, width: number) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n\n/**\n * Clears the entire canvas.\n */\nexport function clearCanvas(canvas?: HTMLCanvasElement, ctx?: CanvasRenderingContext2D) {\n  if (!ctx && !canvas) {\n    return;\n  }\n\n  ctx = ctx || canvas.getContext('2d');\n\n  ctx.save();\n  // canvas.width and canvas.height do not consider the canvas transform,\n  // while clearRect does\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\n\nexport interface DrawPointOptions {\n  pointStyle: PointStyle;\n  rotation?: number;\n  radius: number;\n  borderWidth: number;\n}\n\nexport function drawPoint(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number\n) {\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  drawPointLegend(ctx, options, x, y, null);\n}\n\n// eslint-disable-next-line complexity\nexport function drawPointLegend(\n  ctx: CanvasRenderingContext2D,\n  options: DrawPointOptions,\n  x: number,\n  y: number,\n  w: number\n) {\n  let type: string, xOffset: number, yOffset: number, size: number, cornerRadius: number, width: number, xOffsetW: number, yOffsetW: number;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  switch (style) {\n  // Default includes circle\n    default:\n      if (w) {\n        ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n      } else {\n        ctx.arc(x, y, radius, 0, TAU);\n      }\n      ctx.closePath();\n      break;\n    case 'triangle':\n      width = w ? w / 2 : radius;\n      ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      rad += TWO_THIRDS_PI;\n      ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n      ctx.closePath();\n      break;\n    case 'rectRounded':\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\n    // `quadraticCurveTo` since it generates better results when rect is\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\n    // closer proportion to the previous impl and it is inscribed in the\n    // circle with `radius`. For more details, see the following PRs:\n    // https://github.com/chartjs/Chart.js/issues/5597\n    // https://github.com/chartjs/Chart.js/issues/5858\n      cornerRadius = radius * 0.516;\n      size = radius - cornerRadius;\n      xOffset = Math.cos(rad + QUARTER_PI) * size;\n      xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      yOffset = Math.sin(rad + QUARTER_PI) * size;\n      yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n      ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n      ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n      ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n      ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n      ctx.closePath();\n      break;\n    case 'rect':\n      if (!rotation) {\n        size = Math.SQRT1_2 * radius;\n        width = w ? w / 2 : size;\n        ctx.rect(x - width, y - size, 2 * width, 2 * size);\n        break;\n      }\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'rectRot':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      ctx.closePath();\n      break;\n    case 'crossRot':\n      rad += QUARTER_PI;\n    /* falls through */\n    case 'cross':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'star':\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      rad += QUARTER_PI;\n      xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n      xOffset = Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n      ctx.moveTo(x - xOffsetW, y - yOffset);\n      ctx.lineTo(x + xOffsetW, y + yOffset);\n      ctx.moveTo(x + yOffsetW, y - xOffset);\n      ctx.lineTo(x - yOffsetW, y + xOffset);\n      break;\n    case 'line':\n      xOffset = w ? w / 2 : Math.cos(rad) * radius;\n      yOffset = Math.sin(rad) * radius;\n      ctx.moveTo(x - xOffset, y - yOffset);\n      ctx.lineTo(x + xOffset, y + yOffset);\n      break;\n    case 'dash':\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n      break;\n    case false:\n      ctx.closePath();\n      break;\n  }\n\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\n\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */\nexport function _isPointInArea(\n  point: Point,\n  area: TRBL,\n  margin?: number\n) {\n  margin = margin || 0.5; // margin - default is to match rounded decimals\n\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\n\nexport function clipArea(ctx: CanvasRenderingContext2D, area: TRBL) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\n\nexport function unclipArea(ctx: CanvasRenderingContext2D) {\n  ctx.restore();\n}\n\n/**\n * @private\n */\nexport function _steppedLineTo(\n  ctx: CanvasRenderingContext2D,\n  previous: Point,\n  target: Point,\n  flip?: boolean,\n  mode?: string\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @private\n */\nexport function _bezierCurveTo(\n  ctx: CanvasRenderingContext2D,\n  previous: SplinePoint,\n  target: SplinePoint,\n  flip?: boolean\n) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\n\nfunction setRenderOpts(ctx: CanvasRenderingContext2D, opts: RenderTextOpts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\n\nfunction decorateText(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  line: string,\n  opts: RenderTextOpts\n) {\n  if (opts.strikethrough || opts.underline) {\n    /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\n\nfunction drawBackdrop(ctx: CanvasRenderingContext2D, opts: BackdropOptions) {\n  const oldColor = ctx.fillStyle;\n\n  ctx.fillStyle = opts.color as string;\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n  ctx.fillStyle = oldColor;\n}\n\n/**\n * Render text onto the canvas\n */\nexport function renderText(\n  ctx: CanvasRenderingContext2D,\n  text: string | string[],\n  x: number,\n  y: number,\n  font: CanvasFontSpec,\n  opts: RenderTextOpts = {}\n) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i: number, line: string;\n\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n\n    if (opts.backdrop) {\n      drawBackdrop(ctx, opts.backdrop);\n    }\n\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n\n    y += Number(font.lineHeight);\n  }\n\n  ctx.restore();\n}\n\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */\nexport function addRoundedRectPath(\n  ctx: CanvasRenderingContext2D,\n  rect: RoundedRect & { radius: TRBLCorners }\n) {\n  const {x, y, w, h, radius} = rect;\n\n  // top left arc\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n\n  // line from top left to bottom left\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n\n  // bottom left arc\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n\n  // line from bottom left to bottom right\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n\n  // bottom right arc\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n\n  // line from bottom right to top right\n  ctx.lineTo(x + w, y + radius.topRight);\n\n  // top right arc\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n\n  // line from top right to top left\n  ctx.lineTo(x + radius.topLeft, y);\n}\n","import defaults from '../core/core.defaults.js';\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core.js';\nimport {toFontString} from './helpers.canvas.js';\nimport type {ChartArea, FontSpec, Point} from '../types/index.js';\nimport type {TRBL, TRBLCorners} from '../types/geometric.js';\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\n/**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */\nexport function toLineHeight(value: number | string, size: number): number {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n\n  value = +matches[2];\n\n  switch (matches[3]) {\n    case 'px':\n      return value;\n    case '%':\n      value /= 100;\n      break;\n    default:\n      break;\n  }\n\n  return size * value;\n}\n\nconst numberOrZero = (v: unknown) => +v || 0;\n\n/**\n * @param value\n * @param props\n */\nexport function _readValueToProps<K extends string>(value: number | Record<K, number>, props: K[]): Record<K, number>;\nexport function _readValueToProps<K extends string, T extends string>(value: number | Record<K & T, number>, props: Record<T, K>): Record<T, number>;\nexport function _readValueToProps(value: number | Record<string, number>, props: string[] | Record<string, string>) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\n\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */\nexport function toTRBL(value: number | TRBL | Point) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\n\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */\nexport function toTRBLCorners(value: number | TRBLCorners) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\n\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */\nexport function toPadding(value?: number | TRBL): ChartArea {\n  const obj = toTRBL(value) as ChartArea;\n\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n\n  return obj;\n}\n\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */\n\nexport function toFont(options: Partial<FontSpec>, fallback?: Partial<FontSpec>) {\n  options = options || {};\n  fallback = fallback || defaults.font as FontSpec;\n\n  let size = valueOrDefault(options.size, fallback.size);\n\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = undefined;\n  }\n\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n\n  font.string = toFontString(font);\n  return font;\n}\n\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */\nexport function resolve(inputs: Array<unknown>, context?: object, index?: number, info?: { cacheable: boolean }) {\n  let cacheable = true;\n  let i: number, ilen: number, value: unknown;\n\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\n\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */\nexport function _addGrace(minmax: { min: number; max: number; }, grace: number | string, beginAtZero: boolean) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value: number, add: number) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\n\n/**\n * Create a context inheriting parentContext\n * @param parentContext\n * @param context\n * @returns\n */\nexport function createContext<T extends object>(parentContext: null, context: T): T;\nexport function createContext<T extends object, P extends T>(parentContext: P, context: T): P & T;\nexport function createContext(parentContext: object, context: object) {\n  return Object.assign(Object.create(parentContext), context);\n}\n","/* eslint-disable @typescript-eslint/no-use-before-define */\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartMeta} from '../types/index.js';\nimport type {\n  ResolverObjectKey,\n  ResolverCache,\n  ResolverProxy,\n  DescriptorDefaults,\n  Descriptor,\n  ContextCache,\n  ContextProxy\n} from './helpers.config.types.js';\nimport {isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core.js';\n\nexport * from './helpers.config.types.js';\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */\nexport function _createResolver<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  scopes: T,\n  prefixes = [''],\n  rootScopes?: R,\n  fallback?: ResolverObjectKey,\n  getTarget = () => scopes[0]\n) {\n  const finalRootScopes = rootScopes || scopes;\n  if (typeof fallback === 'undefined') {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache: ResolverCache<T, R> = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: finalRootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope: AnyObject) => _createResolver([scope, ...scopes], prefixes, finalRootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop: string) {\n      delete target[prop]; // remove from cache\n      delete target._keys; // remove cached keys\n      delete scopes[0][prop]; // remove from top level scope\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop: string) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop: string, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value; // set to top level scope + cache\n      delete target._keys; // remove cached keys\n      return true;\n    }\n  }) as ResolverProxy<T, R>;\n}\n\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */\nexport function _attachContext<\n  T extends AnyObject[] = AnyObject[],\n  R extends AnyObject[] = T\n>(\n  proxy: ResolverProxy<T, R>,\n  context: AnyObject,\n  subProxy?: ResolverProxy<T, R>,\n  descriptorDefaults?: DescriptorDefaults\n) {\n  const cache: ContextCache<T, R> = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx: AnyObject) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope: AnyObject) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    /**\n     * A trap for the delete operator.\n     */\n    deleteProperty(target, prop) {\n      delete target[prop]; // remove from cache\n      delete proxy[prop]; // remove from proxy\n      return true;\n    },\n\n    /**\n     * A trap for getting property values.\n     */\n    get(target, prop: string, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getPrototypeOf.\n     */\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n\n    /**\n     * A trap for the in operator.\n     */\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n\n    /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n\n    /**\n     * A trap for setting property values.\n     */\n    set(target, prop, value) {\n      proxy[prop] = value; // set to proxy\n      delete target[prop]; // remove from cache\n      return true;\n    }\n  }) as ContextProxy<T, R>;\n}\n\n/**\n * @private\n */\nexport function _descriptors(\n  proxy: ResolverCache,\n  defaults: DescriptorDefaults = {scriptable: true, indexable: true}\n): Descriptor {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\n\nconst readKey = (prefix: string, name: string) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop: string, value: unknown) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\n\nfunction _cached(\n  target: AnyObject,\n  prop: string,\n  resolve: () => unknown\n) {\n  if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n    return target[prop];\n  }\n\n  const value = resolve();\n  // cache the resolved value\n  target[prop] = value;\n  return value;\n}\n\nfunction _resolveWithContext(\n  target: ContextCache,\n  prop: string,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop]; // resolve from proxy\n\n  // resolve with context\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    // if the resolved value is an object, create a sub resolver for it\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\n\nfunction _resolveScriptable(\n  prop: string,\n  getValue: (ctx: AnyObject, sub: AnyObject) => unknown,\n  target: ContextCache,\n  receiver: AnyObject\n) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  let value = getValue(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    // When scriptable option returns an object, create a resolver on that.\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\n\nfunction _resolveArray(\n  prop: string,\n  value: unknown[],\n  target: ContextCache,\n  isIndexable: (key: string) => boolean\n) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n\n  if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n    return value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    // Array of objects, return array or resolvers\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\n\nfunction resolveFallback(\n  fallback: ResolverObjectKey | ((prop: ResolverObjectKey, value: unknown) => ResolverObjectKey),\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\n\nconst getScope = (key: ResolverObjectKey, parent: AnyObject) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n\nfunction addScopes(\n  set: Set<AnyObject>,\n  parentScopes: AnyObject[],\n  key: ResolverObjectKey,\n  parentFallback: ResolverObjectKey,\n  value: unknown\n) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n        // When we reach the descriptor that defines a new _fallback, return that.\n        // The fallback will resume to that new scope.\n        return fallback;\n      }\n    } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n      // Fallback to `false` results to `false`, when falling back to different key.\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n      return null;\n    }\n  }\n  return false;\n}\n\nfunction createSubResolver(\n  parentScopes: AnyObject[],\n  resolver: ResolverCache,\n  prop: ResolverObjectKey,\n  value: unknown\n) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set<AnyObject>();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (typeof fallback !== 'undefined' && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop as string, value));\n}\n\nfunction addScopesFromKey(\n  set: Set<AnyObject>,\n  allScopes: AnyObject[],\n  key: ResolverObjectKey,\n  fallback: ResolverObjectKey,\n  item: unknown\n) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\n\nfunction subGetTarget(\n  resolver: ResolverCache,\n  prop: string,\n  value: unknown\n) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    // For array of objects, the object is used to store updated values\n    return value;\n  }\n  return target || {};\n}\n\nfunction _resolveWithPrefixes(\n  prop: string,\n  prefixes: string[],\n  scopes: AnyObject[],\n  proxy: ResolverProxy\n) {\n  let value: unknown;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (typeof value !== 'undefined') {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\n\nfunction _resolve(key: string, scopes: AnyObject[]) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (typeof value !== 'undefined') {\n      return value;\n    }\n  }\n}\n\nfunction getKeysFromAllScopes(target: ResolverCache) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\n\nfunction resolveKeysFromAllScopes(scopes: AnyObject[]) {\n  const set = new Set<string>();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nexport function _parseObjectDataRadialScale(\n  meta: ChartMeta<'line' | 'scatter'>,\n  data: AnyObject[],\n  start: number,\n  count: number\n) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array<{r: unknown}>(count);\n  let i: number, ilen: number, index: number, item: AnyObject;\n\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math.js';\nimport {_isPointInArea} from './helpers.canvas.js';\nimport type {ChartArea} from '../types/index.js';\nimport type {SplinePoint} from '../types/geometric.js';\n\nconst EPSILON = Number.EPSILON || 1e-14;\n\ntype OptionalSplinePoint = SplinePoint | false\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\n\nexport function splineCurve(\n  firstPoint: SplinePoint,\n  middlePoint: SplinePoint,\n  afterPoint: SplinePoint,\n  t: number\n): {\n    previous: SplinePoint\n    next: SplinePoint\n  } {\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n  // This function must also respect \"skipped\" points\n\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n\n  // If all points are the same, s01 & s02 will be inf\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n\n  const fa = t * s01; // scaling factor for triangle Ta\n  const fb = t * s12;\n\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\n\n/**\n * Adjust tangents to ensure monotonic properties\n */\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\n  const pointsLen = points.length;\n\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\n\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\n\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK: number[] = Array(pointsLen).fill(0);\n  const mK: number[] = Array(pointsLen);\n\n  // Calculate slopes (deltaK) and initialize tangents (mK)\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\n  let pointAfter = getPoint(points, 0);\n\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n          : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n\n  monotoneAdjust(points, deltaK, mK);\n\n  monotoneCompute(points, mK, indexAxis);\n}\n\nfunction capControlPoint(pt: number, min: number, max: number) {\n  return Math.max(Math.min(pt, max), min);\n}\n\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\n\n/**\n * @private\n */\nexport function _updateBezierControlPoints(\n  points: SplinePoint[],\n  options,\n  area: ChartArea,\n  loop: boolean,\n  indexAxis: 'x' | 'y'\n) {\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\n\n  // Only consider points that are drawn in case the spanGaps option is used\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n","import type {ChartArea, Scale} from '../types/index.js';\nimport type Chart from '../core/core.controller.js';\nimport type {ChartEvent} from '../types.js';\nimport {INFINITY} from './helpers.math.js';\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */\n\n/**\n * @private\n */\nexport function _isDomSupported(): boolean {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n\n/**\n * @private\n */\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = (parent as ShadowRoot).host;\n  }\n  return parent as HTMLCanvasElement;\n}\n\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */\n\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\n  let valueInPixels: number;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n\n    if (styleValue.indexOf('%') !== -1) {\n      // percentage * size in dimension\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n\n  return valueInPixels;\n}\n\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\n\nexport function getStyle(el: HTMLElement, property: string): string {\n  return getComputedStyle(el).getPropertyValue(property);\n}\n\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\n  const result = {} as ChartArea;\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\n\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\n\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */\nfunction getCanvasPosition(\n  e: Event | TouchEvent | MouseEvent,\n  canvas: HTMLCanvasElement\n): {\n    x: number;\n    y: number;\n    box: boolean;\n  } {\n  const touches = (e as TouchEvent).touches;\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\n  const {offsetX, offsetY} = source as MouseEvent;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\n\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */\n\nexport function getRelativePosition(\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\n  chart: Chart\n): { x: number; y: number } {\n  if ('native' in event) {\n    return event;\n  }\n\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(event, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\n\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\n  let maxWidth: number, maxHeight: number;\n\n  if (width === undefined || height === undefined) {\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\n\nconst round1 = (v: number) => Math.round(v * 10) / 10;\n\n// eslint-disable-next-line complexity\nexport function getMaximumSize(\n  canvas: HTMLCanvasElement,\n  bbWidth?: number,\n  bbHeight?: number,\n  aspectRatio?: number\n): { width: number; height: number } {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    // https://github.com/chartjs/Chart.js/issues/4659\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n    height = round1(width / 2);\n  }\n\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n    height = containerSize.height;\n    width = round1(Math.floor(height * aspectRatio));\n  }\n\n  return {width, height};\n}\n\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */\nexport function retinaScale(\n  chart: Chart,\n  forceRatio: number,\n  forceStyle?: boolean\n): boolean | void {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n\n  chart.height = Math.floor(chart.height);\n  chart.width = Math.floor(chart.width);\n\n  const canvas = chart.canvas;\n\n  // If no style has been set on the canvas, the render size is used as display size,\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n  // See https://github.com/chartjs/Chart.js/issues/3575\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nexport const supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() { // This function will be called when the browser attempts to access the passive property.\n        passiveSupported = true;\n        return false;\n      }\n    } as EventListenerOptions;\n\n    if (_isDomSupported()) {\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    }\n  } catch (e) {\n    // continue regardless of error\n  }\n  return passiveSupported;\n}());\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */\n\nexport function readUsedSize(\n  element: HTMLElement,\n  property: 'width' | 'height'\n): number | undefined {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n","import type {Point, SplinePoint} from '../types/geometric.js';\n\n/**\n * @private\n */\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\n\n/**\n * @private\n */\nexport function _steppedInterpolation(\n  p1: Point,\n  p2: Point,\n  t: number, mode: 'middle' | 'after' | unknown\n) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\n        : t > 0 ? p2.y : p1.y\n  };\n}\n\n/**\n * @private\n */\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n","export interface RTLAdapter {\n  x(x: number): number;\n  setWidth(w: number): void;\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\n  xPlus(x: number, value: number): number;\n  leftForLtr(x: number, itemWidth: number): number;\n}\n\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\n\nconst getLeftToRightAdapter = function(): RTLAdapter {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) { // eslint-disable-line no-unused-vars\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\n      return x;\n    },\n  };\n};\n\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\n\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\n  let style: CSSStyleDeclaration, original: [string, string];\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n\n    style.setProperty('direction', direction, 'important');\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\n  }\n}\n\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\n  if (original !== undefined) {\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math.js';\nimport {createContext} from './helpers.options.js';\nimport {isPatternOrGradient} from './helpers.color.js';\n\n/**\n * @typedef { import('../elements/element.line.js').default } LineElement\n * @typedef { import('../elements/element.point.js').default } PointElement\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\n */\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\n\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\n\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  // eslint-disable-next-line prefer-const\n  let {start, end, loop} = segment;\n  let i, ilen;\n\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\n\n/**\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} [segment.style] - segment style\n * @param {PointElement[]} points - the points that this segment refers to\n * @param {object} [bounds]\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the property\n * @param {number} bounds.end - end value of the property\n * @private\n **/\nexport function _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n\n    if (point.skip) {\n      continue;\n    }\n\n    value = normalize(point[property]);\n\n    if (value === prevValue) {\n      continue;\n    }\n\n    inside = between(value, startBound, endBound);\n\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n\n  return result;\n}\n\n\n/**\n * Returns the segments of the line that are inside given bounds\n * @param {LineElement} line\n * @param {object} [bounds]\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\n * @param {number} bounds.start - start value of the `property`\n * @param {number} bounds.end - end value of the `property`\n * @private\n */\nexport function _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\n\n/**\n * Find start and end index of a line.\n */\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n\n  if (loop && !spanGaps) {\n    // loop and not spanning gaps, first find a gap to start from\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n\n  // find first non skipped point (after the first gap possibly)\n  while (start < count && points[start].skip) {\n    start++;\n  }\n\n  // if we looped to count, start needs to be 0\n  start %= count;\n\n  if (loop) {\n    // loop will go past count, if start > 0\n    end += start;\n  }\n\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n\n  // end could be more than count, normalize\n  end %= count;\n\n  return {start, end};\n}\n\n/**\n * Compute solid segments from Points, when spanGaps === false\n * @param {PointElement[]} points - the points\n * @param {number} start - start index\n * @param {number} max - max index (can go past count on a loop)\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\n */\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        // @ts-ignore\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n\n  return result;\n}\n\n/**\n * Compute the continuous segments that define the whole line\n * There can be skipped points within a segment, if spanGaps is true.\n * @param {LineElement} line\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n * @private\n */\nexport function _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n\n  if (!count) {\n    return [];\n  }\n\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n\n/**\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\n\n/**\n * @param {LineElement} line\n * @param {Segment[]} segments\n * @param {PointElement[]} points\n * @param {object} [segmentOptions]\n * @return {Segment[]}\n */\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    // Style can not start/end on a skipped point, adjust indices accordingly\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n\n  return result;\n}\n\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\n\nfunction styleChanged(style, prevStyle) {\n  if (!prevStyle) {\n    return false;\n  }\n  const cache = [];\n  const replacer = function(key, value) {\n    if (!isPatternOrGradient(value)) {\n      return value;\n    }\n    if (!cache.includes(value)) {\n      cache.push(value);\n    }\n    return cache.indexOf(value);\n  };\n  return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n","import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the envent inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types.js';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  const options = chart.options;\n\n  if (options && nextOptions) {\n    Object.assign(options, nextOptions);\n  }\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, BaseChartComponent } from './types.js';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils.js';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  props: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  const {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...canvasProps\n  } = props as ChartProps;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<ChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      role='img'\n      height={height}\n      width={width}\n      {...canvasProps}\n    >\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as BaseChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types.js';\nimport { Chart } from './chart.js';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","undefined","HUE_RE","hsl2rgbn","s","n","k","arguments","length","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","hexParse","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_len2","_key2","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","useOffsetPos","shadowRoot","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","_len","_key","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","LineController","_index_","_value_","super","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","getBasePixel","lastPoint","updateControlPoints","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","center","getCenterPoint","getNearestItems","startAngle","endAngle","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","sort","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","horizontal","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","isHorizontal","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","_length","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","edge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","idx","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","controllers","_typedRegistries","_each","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","_len11","scaleOptions","_key11","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","getSizeForArea","field","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","setStyle","lineCap","lineJoin","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","minY","maxY","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_fullLoop","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","hoverBorderWidth","hoverRadius","mouseX","mouseY","inXRange","inYRange","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_ref5","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","getPointPositionForValue","startValue","_getTargetValue","circular","getDistanceFromCenterForValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","legendItem","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","fontColor","lineDash","drawOptions","SQRT2","centerX","yBoxTop","xBoxLeft","borderRadius","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","legend","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","centerY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref7","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","defaultDatasetIdKey","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","useEffect","nextOptions","setOptions","React","role","forwardRef","createTypedChart","registerables","Line"],"sourceRoot":""}