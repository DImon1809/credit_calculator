{"version":3,"file":"static/js/36.e18f67df.chunk.js","mappings":"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","sources":["errorTypeGuard.ts","components/card/Card.tsx","components/card-wrapper/CardWrapper.tsx","components/user-forms/desription-form/DescriptionForm.tsx","components/UI/form-input/FormInput.tsx","components/UI/form-button/FormButton.tsx","components/user-forms/auth-form/AuthForm.tsx","components/UI/check-box/CheckBox.tsx","components/user-forms/register-form/RegisterForm.tsx","components/user-forms/forms-wrapper/FormsWrapper.tsx","pages/personal-account/PersonalAccount.tsx","testData.ts"],"sourcesContent":["import { FetchBaseQueryError } from \"@reduxjs/toolkit/query\";\r\n\r\n// export interface IDataError {\r\n//   error: string;\r\n//   message: string[];\r\n//   statusCode: number;\r\n//   status: number;\r\n// }\r\n\r\nexport interface IError {\r\n  status: number;\r\n  data: object;\r\n}\r\n\r\nconst isFetchBaseQueryError = (error: any): error is FetchBaseQueryError => {\r\n  return error && typeof error.status === \"number\";\r\n};\r\n\r\nexport const handleError = (error: any) => {\r\n  if (isFetchBaseQueryError(error)) return error as IError;\r\n};\r\n","import { FC, useState, useEffect } from \"react\";\r\n\r\nimport {\r\n  toggleDeleteWind,\r\n  togglePayment,\r\n} from \"../../store/features/alertSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleWrapper } from \"../../store/features/gWrapperslice\";\r\n\r\nimport edit from \"../../assets/ui/edit.webp\";\r\nimport drop from \"../../assets/ui/drop.webp\";\r\n\r\nimport \"./Card.scss\";\r\n\r\nexport interface ICard {\r\n  count: number;\r\n  amount: number;\r\n  termInMonth: number;\r\n  monthlyPayment: number;\r\n  delay: number;\r\n  isLeft: boolean;\r\n}\r\n\r\nconst Card: FC<ICard> = ({\r\n  count,\r\n  amount,\r\n  termInMonth,\r\n  monthlyPayment,\r\n  delay,\r\n  isLeft,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isMove, setIsMove] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (!delay) return setIsMove(true);\r\n\r\n    if (delay)\r\n      setTimeout(() => {\r\n        setIsMove(true);\r\n      }, delay);\r\n  }, [delay]);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        isLeft\r\n          ? isMove\r\n            ? \"card-left move\"\r\n            : \"card-left\"\r\n          : isMove\r\n          ? \"card-right move\"\r\n          : \"card-right\"\r\n      }\r\n    >\r\n      <div className=\"card-head\">\r\n        <div className=\"card-head-text\">\r\n          <div className=\"card-count\">\r\n            <p>{count}.</p>\r\n          </div>\r\n\r\n          <div className=\"card-mounthly\">\r\n            <p>Под {monthlyPayment} %.</p>\r\n          </div>\r\n          <div className=\"card-term\">\r\n            <p>На {termInMonth} месяца.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card-body\">\r\n        <div className=\"card-amount\">\r\n          <p>Кредит на сумму {amount / 1000} тыс. ₽</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card-item-wrapper\">\r\n        <div className=\"card-edit\">\r\n          <img\r\n            src={edit}\r\n            alt=\"#\"\r\n            onClick={() => {\r\n              dispatch(toggleWrapper(true));\r\n              dispatch(togglePayment(true));\r\n            }}\r\n          />\r\n        </div>\r\n        <div\r\n          className=\"card-drop\"\r\n          onClick={() => {\r\n            dispatch(toggleWrapper(true));\r\n            dispatch(toggleDeleteWind(true));\r\n          }}\r\n        >\r\n          <img src={drop} alt=\"#\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { FC, useState, useEffect } from \"react\";\r\n\r\nimport Card from \"../card/Card\";\r\n\r\nimport \"./CardWrapper.scss\";\r\n\r\nconst cardData = [\r\n  {\r\n    count: 1,\r\n    amount: 4000000,\r\n    termInMonth: 5,\r\n    monthlyPayment: 12,\r\n  },\r\n\r\n  { count: 2, amount: 10000, termInMonth: 73, monthlyPayment: 18 },\r\n\r\n  { count: 3, amount: 50000, termInMonth: 23, monthlyPayment: 10 },\r\n\r\n  { count: 4, amount: 850000, termInMonth: 7, monthlyPayment: 5 },\r\n\r\n  { count: 5, amount: 40000, termInMonth: 5, monthlyPayment: 8 },\r\n\r\n  { count: 6, amount: 320000, termInMonth: 12, monthlyPayment: 5 },\r\n\r\n  // { count: 7, amount: 4000000, termInMonth: 2, monthlyPayment: 12 },\r\n\r\n  // { count: 8, amount: 4000000, termInMonth: 2, monthlyPayment: 12 },\r\n];\r\n\r\nconst CardWrapper: FC = () => {\r\n  const [smallSize, setSmallSize] = useState<boolean>(false);\r\n\r\n  const [cards, setCards] = useState<any[]>([]);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (window.innerWidth <= 660) setSmallSize(true);\r\n\r\n      if (window.innerWidth > 660 && smallSize) setSmallSize(false);\r\n    };\r\n\r\n    handleResize();\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   setCards(JSON.parse(localStorage.getItem(\"cards\") || \"\") ?? []);\r\n  // }, []);\r\n\r\n  return (\r\n    <div className={cards.length > 6 ? \"card-wrapper long\" : \"card-wrapper\"}>\r\n      <div className=\"card-wrapper-left\">\r\n        {cardData.map((card, index) => {\r\n          if (index % 2 === 0) {\r\n            return (\r\n              <Card\r\n                key={index + 1}\r\n                count={card.count}\r\n                amount={card.amount}\r\n                termInMonth={card.termInMonth}\r\n                monthlyPayment={card.monthlyPayment}\r\n                delay={index < 6 ? (index === 0 ? 100 : (index / 2) * 150) : 0}\r\n                isLeft={true}\r\n              />\r\n            );\r\n          }\r\n\r\n          if (index % 2 !== 0 && smallSize) {\r\n            return (\r\n              <Card\r\n                key={index + 1}\r\n                count={card.count}\r\n                amount={card.amount}\r\n                termInMonth={card.termInMonth}\r\n                monthlyPayment={card.monthlyPayment}\r\n                delay={\r\n                  index < 6\r\n                    ? index === 1\r\n                      ? 100\r\n                      : Math.ceil(index / 2) * 150\r\n                    : 0\r\n                }\r\n                isLeft={false}\r\n              />\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n      <div className=\"card-wrapper-right\">\r\n        {!smallSize &&\r\n          cardData.map((card, index) => {\r\n            if (index % 2 !== 0) {\r\n              return (\r\n                <Card\r\n                  key={index + 1}\r\n                  count={card.count}\r\n                  amount={card.amount}\r\n                  termInMonth={card.termInMonth}\r\n                  monthlyPayment={card.monthlyPayment}\r\n                  delay={\r\n                    index < 6\r\n                      ? index === 1\r\n                        ? 100\r\n                        : Math.ceil(index / 2) * 150\r\n                      : 0\r\n                  }\r\n                  isLeft={false}\r\n                />\r\n              );\r\n            }\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardWrapper;\r\n","import { FC, useState, useEffect } from \"react\";\r\n\r\nimport \"./DescriptionForm.scss\";\r\n\r\nimport { IForms } from \"../forms-wrapper/FormsWrapper\";\r\n\r\nconst DescriptionForm: FC<IForms> = ({ slideMove, changeSlideMove }) => {\r\n  const [directionName, setDiractionName] = useState<string>(\"\");\r\n\r\n  useEffect(() => {\r\n    if (slideMove === \"description\") return setDiractionName(\"\");\r\n\r\n    if (slideMove === \"registration\") return setDiractionName(\"left\");\r\n\r\n    if (slideMove === \"authorization\") return setDiractionName(\"right\");\r\n  }, [slideMove]);\r\n\r\n  return (\r\n    <div className={`description-form ${directionName}`}>\r\n      <div className=\"description-title\">\r\n        <h3>Описание</h3>\r\n      </div>\r\n\r\n      <div className=\"description\">\r\n        <p>\r\n          Привет! В данном разделе ты найдешь информацию по своим кредитам, а\r\n          также возможность их удаления и редактирования.\r\n        </p>\r\n      </div>\r\n      <div className=\"cont-description\">\r\n        <p>\r\n          Прежде чем продолжить,{\" \"}\r\n          <span\r\n            className=\"to-auth\"\r\n            onClick={() => changeSlideMove(\"authorization\")}\r\n          >\r\n            войди в аккаунт\r\n          </span>{\" \"}\r\n          или{\" \"}\r\n          <span\r\n            className=\"to-register\"\r\n            onClick={() => changeSlideMove(\"registration\")}\r\n          >\r\n            зарегистрируйся\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DescriptionForm;\r\n","import { FC } from \"react\";\r\n\r\nimport { FiEye } from \"react-icons/fi\";\r\nimport { FiEyeOff } from \"react-icons/fi\";\r\n\r\nimport \"./FormInput.scss\";\r\n\r\nexport interface IFormInput {\r\n  type: string;\r\n  inputName: string;\r\n  inputId: string;\r\n  inputValue: string;\r\n  inputText: string;\r\n  isPassword?: boolean;\r\n  isOpenEye?: boolean;\r\n  isAlert?: boolean;\r\n  setInputValue: (value: string) => void;\r\n  handleEye?: () => void;\r\n}\r\n\r\nconst FormInput: FC<IFormInput> = ({\r\n  type,\r\n  inputName,\r\n  inputId,\r\n  inputValue,\r\n  inputText,\r\n  isPassword,\r\n  isOpenEye,\r\n  isAlert,\r\n  setInputValue,\r\n  handleEye,\r\n}) => {\r\n  return (\r\n    <div className=\"form-input-wrapper\">\r\n      <input\r\n        type={type}\r\n        name={inputName}\r\n        id={inputId}\r\n        className={\r\n          isPassword\r\n            ? isAlert\r\n              ? \"form-input is-password alert\"\r\n              : \"form-input password\"\r\n            : isAlert\r\n            ? \"form-input alert\"\r\n            : \"form-input\"\r\n        }\r\n        placeholder=\" \"\r\n        autoComplete=\"off\"\r\n        value={inputValue}\r\n        onChange={(event) => setInputValue(event.target.value)}\r\n      />\r\n      <label htmlFor={inputId}>{inputText}</label>\r\n\r\n      {isPassword ? (\r\n        <div className=\"eye-wrapper\" onClick={handleEye}>\r\n          {isOpenEye ? <FiEye /> : <FiEyeOff />}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import { FC, MouseEvent } from \"react\";\r\n\r\nimport \"./FormButton.scss\";\r\n\r\nexport interface IFormButton {\r\n  buttonText: string;\r\n  isLoading?: boolean;\r\n  functionButton?: () => void;\r\n}\r\n\r\nconst FormButton: FC<IFormButton> = ({\r\n  buttonText,\r\n  isLoading,\r\n  functionButton,\r\n}) => {\r\n  const handleClick = (event: MouseEvent<HTMLDivElement>) => {\r\n    event.preventDefault();\r\n\r\n    functionButton && functionButton();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-button\" onClick={handleClick}>\r\n      <p className=\"form-button-text\">\r\n        {isLoading ? <span className=\"spinner\"></span> : buttonText}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormButton;\r\n","import { FC, MouseEvent, useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleAlert } from \"../../../store/features/alertSlice\";\r\nimport { toggleUserData } from \"../../../store/features/userSlice\";\r\n\r\nimport { useLoginMutation } from \"../../../store/services/endpoints/userApi\";\r\n\r\nimport { RootType } from \"../../../store\";\r\n\r\nimport { handleError } from \"../../../errorTypeGuard\";\r\n\r\nimport FormInput from \"../../UI/form-input/FormInput\";\r\nimport FormButton from \"../../UI/form-button/FormButton\";\r\n\r\nimport \"./AuthForm.scss\";\r\nimport { cardData } from \"../../../testData\";\r\n\r\nimport { IForms } from \"../forms-wrapper/FormsWrapper\";\r\n\r\nconst AuthForm: FC<IForms> = ({ slideMove, changeSlideMove }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [triggerLogin, { isLoading, isError, error, data, isSuccess }] =\r\n    useLoginMutation();\r\n\r\n  const [directionName, setDiractionName] = useState<string>(\"\");\r\n\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const [isOpenEye, setIsOpenEye] = useState<boolean>(false);\r\n  const [pasType, setPasType] = useState<string>(\"password\");\r\n\r\n  const [alertEmail, setAlertEmail] = useState<boolean>(false);\r\n  const [alertPassword, setAlertPassword] = useState<boolean>(false);\r\n\r\n  const setAlertsInput = (alEmail: boolean, alPass: boolean): void => {\r\n    setAlertEmail(alEmail);\r\n    setAlertPassword(alPass);\r\n  };\r\n\r\n  const handleChangeEmail = (value: string): void => {\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleChangePassword = (value: string): void => {\r\n    setPassword(value);\r\n  };\r\n  const handleEye = () => {\r\n    if (!isOpenEye) {\r\n      setPasType(\"text\");\r\n      return setIsOpenEye(true);\r\n    }\r\n\r\n    if (isOpenEye) {\r\n      setPasType(\"password\");\r\n      return setIsOpenEye(false);\r\n    }\r\n  };\r\n\r\n  const handleToBack = (): void => {\r\n    changeSlideMove(\"description\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setIsOpenEye(false);\r\n    setPasType(\"password\");\r\n\r\n    return setAlertsInput(false, false);\r\n  };\r\n\r\n  const handleAuth = (): void => {\r\n    if (!email.length || !password.length) {\r\n      !email.length && setAlertEmail(true);\r\n      !password.length && setAlertPassword(true);\r\n\r\n      dispatch(\r\n        toggleAlert({\r\n          isAlert: true,\r\n          isAuthAlert: false,\r\n          alertText: \"Все поля нужно заполнить!\",\r\n        })\r\n      );\r\n\r\n      return;\r\n    }\r\n\r\n    !isLoading && triggerLogin({ email, password });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (slideMove === \"description\") return setDiractionName(\"\");\r\n\r\n    if (slideMove === \"authorization\") return setDiractionName(\"left\");\r\n  }, [slideMove]);\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      if (handleError(error)?.status === 401) {\r\n        dispatch(\r\n          toggleAlert({\r\n            isAlert: true,\r\n            alertText: \"Неправильный логин или пароль!\",\r\n            isAuthAlert: false,\r\n          })\r\n        );\r\n\r\n        setAlertsInput(true, true);\r\n      }\r\n    }\r\n\r\n    console.log(error);\r\n\r\n    if (isLoading) {\r\n      localStorage.setItem(\"email\", email);\r\n      localStorage.setItem(\"cards\", JSON.stringify(cardData));\r\n\r\n      dispatch(\r\n        toggleAlert({\r\n          isAlert: true,\r\n          alertText: \"Вы авторизовались!\",\r\n          isAuthAlert: false,\r\n        })\r\n      );\r\n\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n\r\n      return setAlertsInput(false, false);\r\n    }\r\n  }, [isLoading, isError]);\r\n\r\n  useEffect(() => {\r\n    if (alertEmail || alertPassword) setAlertsInput(false, false);\r\n  }, [email, password]);\r\n\r\n  return (\r\n    <div className={`auth-form-wrapper ${directionName}`}>\r\n      <div className=\"auth-title\">\r\n        <h3>Авторизация</h3>\r\n      </div>\r\n\r\n      <form className=\"auth-form\">\r\n        <FormInput\r\n          type=\"text\"\r\n          inputName=\"email\"\r\n          inputId=\"auth-email\"\r\n          inputValue={email}\r\n          isAlert={alertEmail}\r\n          inputText=\"Введите email\"\r\n          setInputValue={handleChangeEmail}\r\n        />\r\n\r\n        <FormInput\r\n          type={pasType}\r\n          inputName=\"password\"\r\n          inputId=\"auth-password\"\r\n          inputValue={password}\r\n          inputText=\"Введите пароль\"\r\n          isOpenEye={isOpenEye}\r\n          isPassword={true}\r\n          isAlert={alertPassword}\r\n          handleEye={handleEye}\r\n          setInputValue={handleChangePassword}\r\n        />\r\n\r\n        <div className=\"buttons-wrapper\">\r\n          <FormButton\r\n            isLoading={isLoading}\r\n            buttonText=\"авторизоваться\"\r\n            functionButton={handleAuth}\r\n          />\r\n          <FormButton buttonText=\"отмена\" functionButton={handleToBack} />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { FC, Dispatch, SetStateAction } from \"react\";\r\n\r\nimport \"./CheckBox.scss\";\r\n\r\nexport interface ICheckBox {\r\n  isCheck: boolean;\r\n  isAlert: boolean;\r\n  setIsCheck: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst CheckBox: FC<ICheckBox> = ({ isAlert, isCheck, setIsCheck }) => {\r\n  return (\r\n    <div\r\n      className={isAlert ? \"check-box alert\" : \"check-box\"}\r\n      onClick={() => setIsCheck((state) => !state)}\r\n    >\r\n      <div className={isCheck ? \"mark-wrapper check\" : \"mark-wrapper\"}>\r\n        <span className=\"left-line\"></span>\r\n        <span className=\"right-line\"></span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckBox;\r\n","import { FC, useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleAlert } from \"../../../store/features/alertSlice\";\r\nimport { useRegisterMutation } from \"../../../store/services/endpoints/userApi\";\r\n\r\nimport { handleError } from \"../../../errorTypeGuard\";\r\n\r\nimport FormInput from \"../../UI/form-input/FormInput\";\r\nimport FormButton from \"../../UI/form-button/FormButton\";\r\n\r\nimport agreementPdf from \"../../../assets/agreement/agreement.pdf\";\r\n\r\nimport CheckBox from \"../../UI/check-box/CheckBox\";\r\n\r\nimport \"./RegisterForm.scss\";\r\n\r\nimport { IForms } from \"../forms-wrapper/FormsWrapper\";\r\n\r\nimport { cardData } from \"../../../testData\";\r\n\r\nconst RegisterForm: FC<IForms> = ({ slideMove, changeSlideMove }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [triggerRegister, { isError, isLoading, isSuccess, error }] =\r\n    useRegisterMutation();\r\n\r\n  const [directionName, setDiractionName] = useState<string>(\"\");\r\n\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n\r\n  const [isOpenEye, setIsOpenEye] = useState<boolean>(false);\r\n  const [pasType, setPasType] = useState<string>(\"password\");\r\n  const [isCheck, setIsCheck] = useState<boolean>(false);\r\n\r\n  const [alertEmail, setAlertEmail] = useState<boolean>(false);\r\n  const [alertPassword, setAlertPassword] = useState<boolean>(false);\r\n  const [alertCheck, setAlertCheck] = useState<boolean>(false);\r\n\r\n  const setAlertsInput = (\r\n    alEmail: boolean,\r\n    alPass: boolean,\r\n    alCheck: boolean\r\n  ): void => {\r\n    setAlertEmail(alEmail);\r\n    setAlertPassword(alPass);\r\n    setAlertCheck(alCheck);\r\n  };\r\n\r\n  const handleChangeEmail = (value: string): void => {\r\n    setEmail(value);\r\n  };\r\n\r\n  const handleChangePassword = (value: string): void => {\r\n    setPassword(value);\r\n  };\r\n\r\n  const handleEye = () => {\r\n    if (!isOpenEye) {\r\n      setPasType(\"text\");\r\n      return setIsOpenEye(true);\r\n    }\r\n\r\n    if (isOpenEye) {\r\n      setPasType(\"password\");\r\n      return setIsOpenEye(false);\r\n    }\r\n  };\r\n\r\n  const handleToBack = (): void => {\r\n    changeSlideMove(\"description\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setIsOpenEye(false);\r\n    setPasType(\"password\");\r\n\r\n    return setAlertsInput(false, false, false);\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    const emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\r\n\r\n    if (!email.length || !password.length || !isCheck) {\r\n      !email.length && setAlertEmail(true);\r\n      !password.length && setAlertPassword(true);\r\n      !isCheck && setAlertCheck(true);\r\n\r\n      dispatch(\r\n        toggleAlert({\r\n          isAlert: true,\r\n          isAuthAlert: false,\r\n          alertText: \"Все поля надо заполнить\",\r\n        })\r\n      );\r\n\r\n      return;\r\n    }\r\n\r\n    if (!emailRegex.test(email)) {\r\n      dispatch(\r\n        toggleAlert({\r\n          isAlert: true,\r\n          isAuthAlert: false,\r\n          alertText: \"Некорректый формат email!\",\r\n        })\r\n      );\r\n\r\n      return setAlertsInput(true, false, false);\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      dispatch(\r\n        toggleAlert({\r\n          isAlert: true,\r\n          isAuthAlert: false,\r\n          alertText: \"Пароль короче 6 символов!\",\r\n        })\r\n      );\r\n\r\n      return setAlertsInput(false, true, false);\r\n    }\r\n\r\n    // !isLoading && triggerRegister({ email, password });\r\n    triggerRegister({ email, password });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (slideMove === \"description\") return setDiractionName(\"\");\r\n\r\n    if (slideMove === \"registration\") setDiractionName(\"right\");\r\n  }, [slideMove]);\r\n\r\n  useEffect(() => {\r\n    if (isError && error) {\r\n      if (handleError(error)?.status === 409) {\r\n        dispatch(\r\n          toggleAlert({\r\n            isAlert: true,\r\n            alertText: \"Пользователь уже существует!\",\r\n            isAuthAlert: false,\r\n          })\r\n        );\r\n\r\n        return setAlertsInput(true, true, false);\r\n      }\r\n\r\n      if (handleError(error)?.status === 400) {\r\n        dispatch(\r\n          toggleAlert({\r\n            isAlert: true,\r\n            alertText: \"Что-то пошло не так!\",\r\n            isAuthAlert: false,\r\n          })\r\n        );\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    if (isLoading && !error) {\r\n      localStorage.setItem(\"email\", email);\r\n      localStorage.setItem(\"cards\", JSON.stringify(cardData));\r\n\r\n      dispatch(\r\n        toggleAlert({\r\n          isAlert: true,\r\n          alertText: \"Вы зарегистрировались!\",\r\n          isAuthAlert: false,\r\n        })\r\n      );\r\n\r\n      setEmail(\"\");\r\n      setPassword(\"\");\r\n      setIsCheck(false);\r\n\r\n      return setAlertsInput(false, false, false);\r\n    }\r\n  }, [isLoading, isError, error]);\r\n\r\n  useEffect(() => {\r\n    if (alertEmail || alertPassword || alertCheck) {\r\n      setAlertEmail(false);\r\n      setAlertPassword(false);\r\n      setAlertCheck(false);\r\n    }\r\n  }, [email, password, isCheck]);\r\n\r\n  return (\r\n    <div className={`register-form-wrapper ${directionName}`}>\r\n      <div className=\"register-title\">\r\n        <h3>Регистрация</h3>\r\n      </div>\r\n\r\n      <form className=\"register-form\">\r\n        <FormInput\r\n          type=\"text\"\r\n          inputName=\"email\"\r\n          inputId=\"register-email\"\r\n          inputValue={email}\r\n          inputText=\"Введите email\"\r\n          isAlert={alertEmail}\r\n          setInputValue={handleChangeEmail}\r\n        />\r\n\r\n        <FormInput\r\n          type={pasType}\r\n          inputName=\"password\"\r\n          inputId=\"register-password\"\r\n          inputValue={password}\r\n          inputText=\"Введите пароль\"\r\n          isOpenEye={isOpenEye}\r\n          isPassword={true}\r\n          isAlert={alertPassword}\r\n          handleEye={handleEye}\r\n          setInputValue={handleChangePassword}\r\n        />\r\n\r\n        <div className=\"police-wrapper\">\r\n          <div className=\"police-title\">\r\n            <p>\r\n              Подтверждаю{\" \"}\r\n              <a\r\n                href={agreementPdf}\r\n                download=\"document.pdf\"\r\n                className=\"download-pdf\"\r\n              >\r\n                пользовательские соглашения\r\n              </a>\r\n              и даю согласие на обработку персональных данных\r\n            </p>\r\n          </div>\r\n          <CheckBox\r\n            isAlert={alertCheck}\r\n            isCheck={isCheck}\r\n            setIsCheck={setIsCheck}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"buttons-wrapper\">\r\n          <FormButton\r\n            isLoading={false}\r\n            buttonText=\"зарегистрироваться\"\r\n            functionButton={handleRegister}\r\n          />\r\n          <FormButton buttonText=\"отмена\" functionButton={handleToBack} />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import { FC, useState, useEffect } from \"react\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootType } from \"../../../store\";\r\n\r\nimport \"./FormsWrapper.scss\";\r\n\r\nimport DescriptionForm from \"../desription-form/DescriptionForm\";\r\nimport AuthForm from \"../auth-form/AuthForm\";\r\nimport RegisterForm from \"../register-form/RegisterForm\";\r\n\r\nexport interface IForms {\r\n  slideMove: string;\r\n  changeSlideMove: (direction: string) => void;\r\n}\r\n\r\nconst FormsWrapper: FC = () => {\r\n  const { isAuth } = useSelector((state: RootType) => state.userSlice);\r\n\r\n  const [slideMove, setSlideMove] = useState<string>(\"description\");\r\n\r\n  const [isClose, setIsClose] = useState<boolean>(false);\r\n\r\n  const changeSlideMove = (direction: string): void => {\r\n    setSlideMove(direction);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isAuth) return setIsClose(true);\r\n\r\n    return setIsClose(false);\r\n  }, [isAuth]);\r\n\r\n  return (\r\n    <div className={isClose ? \"forms-wrapper close\" : \"forms-wrapper\"}>\r\n      <RegisterForm slideMove={slideMove} changeSlideMove={changeSlideMove} />\r\n      <DescriptionForm\r\n        slideMove={slideMove}\r\n        changeSlideMove={changeSlideMove}\r\n      />\r\n      <AuthForm slideMove={slideMove} changeSlideMove={changeSlideMove} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormsWrapper;\r\n","import { FC } from \"react\";\r\n\r\nimport CardWrapper from \"../../components/card-wrapper/CardWrapper\";\r\nimport FormsWrapper from \"../../components/user-forms/forms-wrapper/FormsWrapper\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootType } from \"../../store\";\r\n\r\nimport \"./PersonalAccount.scss\";\r\n\r\nconst PersonalAccount: FC = () => {\r\n  const { isAuth } = useSelector((state: RootType) => state.userSlice);\r\n\r\n  return (\r\n    <section className=\"personal-account\">\r\n      {isAuth ? (\r\n        <div className=\"my-credits\">\r\n          <div className=\"my-credits-header\">\r\n            <div>\r\n              <h3>Личный кабинет</h3>\r\n            </div>\r\n\r\n            <p className=\"user-name\">{localStorage.getItem(\"email\") || \"\"}</p>\r\n          </div>\r\n\r\n          <div className=\"my-credits-body\">\r\n            <p>\r\n              В данном разделе будут отображаться ваши кредиты. При\r\n              необходимости вы можете их удалить либо отредактировать.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {isAuth ? <CardWrapper /> : <FormsWrapper />}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PersonalAccount;\r\n","export const testData: {\r\n  payOfInter: string;\r\n  principal: string;\r\n  perMonth: string;\r\n  repayment: string;\r\n  [key: string]: string;\r\n}[] = [\r\n  {\r\n    payOfInter: \"97 000 ₽\",\r\n    principal: \"320 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"8 000 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"94 430 ₽\",\r\n    principal: \"310 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"7 600 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"91 000 ₽\",\r\n    principal: \"306 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"7 000 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"76 000 ₽\",\r\n    principal: \"280 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"6 060 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"66 000 ₽\",\r\n    principal: \"240 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"5 000 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"27 000 ₽\",\r\n    principal: \"220 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"4 000 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"20 000 ₽\",\r\n    principal: \"320 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"3 000 000 ₽\",\r\n  },\r\n];\r\n\r\nexport const cardData = [\r\n  {\r\n    count: 1,\r\n    amount: 4000000,\r\n    termInMonth: 5,\r\n    monthlyPayment: 12,\r\n  },\r\n\r\n  { count: 2, amount: 10000, termInMonth: 73, monthlyPayment: 18 },\r\n\r\n  { count: 3, amount: 50000, termInMonth: 23, monthlyPayment: 10 },\r\n\r\n  { count: 4, amount: 850000, termInMonth: 7, monthlyPayment: 5 },\r\n\r\n  { count: 5, amount: 40000, termInMonth: 5, monthlyPayment: 8 },\r\n\r\n  { count: 6, amount: 320000, termInMonth: 12, monthlyPayment: 5 },\r\n];\r\n"],"names":["handleError","error","status","isFetchBaseQueryError","_ref","count","amount","termInMonth","monthlyPayment","delay","isLeft","dispatch","useDispatch","isMove","setIsMove","useState","useEffect","setTimeout","_jsxs","className","children","_jsx","src","edit","alt","onClick","toggleWrapper","togglePayment","toggleDeleteWind","drop","cardData","CardWrapper","smallSize","setSmallSize","cards","setCards","handleResize","window","innerWidth","addEventListener","removeEventListener","length","map","card","index","Card","Math","ceil","slideMove","changeSlideMove","directionName","setDiractionName","type","inputName","inputId","inputValue","inputText","isPassword","isOpenEye","isAlert","setInputValue","handleEye","name","id","placeholder","autoComplete","value","onChange","event","target","htmlFor","FiEye","FiEyeOff","buttonText","isLoading","functionButton","preventDefault","triggerLogin","isError","data","isSuccess","useLoginMutation","email","setEmail","password","setPassword","setIsOpenEye","pasType","setPasType","alertEmail","setAlertEmail","alertPassword","setAlertPassword","setAlertsInput","alEmail","alPass","_handleError","toggleAlert","alertText","isAuthAlert","console","log","localStorage","setItem","JSON","stringify","FormInput","FormButton","handleAuth","handleToBack","isCheck","setIsCheck","state","triggerRegister","useRegisterMutation","alertCheck","setAlertCheck","alCheck","_handleError2","href","agreementPdf","download","CheckBox","handleRegister","test","FormsWrapper","isAuth","useSelector","userSlice","setSlideMove","isClose","setIsClose","direction","RegisterForm","DescriptionForm","AuthForm","PersonalAccount","getItem","testData","payOfInter","principal","perMonth","repayment"],"sourceRoot":""}