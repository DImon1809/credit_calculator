{"version":3,"file":"static/js/452.dd1844a9.chunk.js","mappings":"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","sources":["components/UI/range-input/RangeInput.tsx","components/calculator/Calculator.tsx","testData.ts","chart/PaymentChart.tsx","components/payment-schedule/PaymentSchedule.tsx","pages/main-page/MainPage.tsx"],"sourcesContent":["import {\r\n  FC,\r\n  MouseEvent,\r\n  ChangeEvent,\r\n  useRef,\r\n  Dispatch,\r\n  SetStateAction,\r\n  useState,\r\n  useEffect,\r\n} from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleAlert } from \"../../../store/features/alertSlice\";\r\n\r\nimport \"./RangeInput.scss\";\r\n\r\nexport interface IRangeInput {\r\n  rangeText: string;\r\n  preId: string;\r\n  min: string;\r\n  max: string;\r\n  defaultValue?: string;\r\n  pointBegin: string;\r\n  pointMedium: string;\r\n  pointEnd: string;\r\n  isDate: boolean;\r\n  externalValue: string;\r\n  setExternalValue: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nconst RangeInput: FC<IRangeInput> = ({\r\n  rangeText,\r\n  preId,\r\n  min,\r\n  max,\r\n  defaultValue,\r\n  pointBegin,\r\n  pointMedium,\r\n  pointEnd,\r\n  isDate,\r\n  externalValue,\r\n  setExternalValue,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const rangeRef = useRef<HTMLInputElement>(null);\r\n\r\n  const [rangeValue, setRangeValue] = useState<number>(0);\r\n  const [isAlert, setIsAlert] = useState<boolean>(false);\r\n\r\n  const setCoordX = (coordX: number) => {\r\n    if (rangeRef.current) {\r\n      rangeRef.current.style.background = `linear-gradient(90deg, #00aae6 ${coordX}%, #fff ${coordX}%)`;\r\n\r\n      return setRangeValue(coordX);\r\n    }\r\n  };\r\n\r\n  const skipRuble = (event: MouseEvent<HTMLInputElement>): void => {\r\n    const input = event.target as HTMLInputElement;\r\n    const startPosition = input.selectionStart || 0;\r\n\r\n    if (isDate) {\r\n      if (/^\\d+\\s*мес\\./.test(input.value))\r\n        return input.setSelectionRange(\r\n          input.value.length - 5,\r\n          input.value.length - 5\r\n        );\r\n\r\n      let months = input.value\r\n        .split(\" \")\r\n        .reduce<number>((acc, char, index, arr) => {\r\n          if (char === \"месяцев\") return (acc += Number(arr[index - 1]));\r\n\r\n          if (char === \"год\" || char === \"года\" || char === \"лет\")\r\n            acc += Number(arr[index - 1]) * 12;\r\n\r\n          return acc;\r\n        }, 0);\r\n\r\n      setExternalValue(`${months} мес.`);\r\n\r\n      if (externalValue) {\r\n        setTimeout(\r\n          () =>\r\n            input.setSelectionRange(\r\n              `${months} мес.`.length - 5,\r\n              `${months} мес.`.length - 5\r\n            ),\r\n          0\r\n        );\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (!isDate) {\r\n      const needPosition = input.value.replace(\"₽\", \"\");\r\n\r\n      if (startPosition && startPosition > needPosition.length)\r\n        input.setSelectionRange(\r\n          needPosition.length - 1,\r\n          needPosition.length - 1\r\n        );\r\n    }\r\n  };\r\n\r\n  const handleValueInput = (\r\n    event: ChangeEvent<HTMLInputElement>,\r\n    isRange: boolean\r\n  ) => {\r\n    if (!isRange) {\r\n      const input = event.target as HTMLInputElement;\r\n      const currentPosition = input.selectionStart || 0;\r\n\r\n      if (!isDate) {\r\n        let needPosition = event.target.value.replace(/₽/gi, \"\");\r\n\r\n        let currentValue: number;\r\n\r\n        let inputValue: string = needPosition\r\n          .split(\" \")\r\n          .map((char) => char.trim())\r\n          .join(\"\");\r\n\r\n        if (!/^[0-9]*$/.test(inputValue)) {\r\n          dispatch(\r\n            toggleAlert({\r\n              isAlert: true,\r\n              isAuthAlert: false,\r\n              alertText: \"Вводите только числа!\",\r\n            })\r\n          );\r\n\r\n          return setIsAlert(true);\r\n        }\r\n\r\n        currentValue = Number(inputValue);\r\n\r\n        let coordX =\r\n          currentValue <= 100000\r\n            ? 0\r\n            : currentValue > 40000000\r\n            ? 40000000\r\n            : Math.ceil(currentValue / 400000);\r\n\r\n        setCoordX(coordX);\r\n\r\n        const result = `${currentValue > 40000000 ? 40000000 : currentValue}`\r\n          .split(\"\")\r\n          .reverse()\r\n          .map((char, id) => (id % 3 === 0 ? `${char} ` : char))\r\n          .reverse()\r\n          .join(\"\");\r\n\r\n        setExternalValue(result + \"₽\");\r\n\r\n        if (currentPosition > needPosition.length)\r\n          return setTimeout(\r\n            () =>\r\n              input.setSelectionRange(\r\n                needPosition.length - 1,\r\n                needPosition.length - 1\r\n              ),\r\n            0\r\n          );\r\n\r\n        if (currentPosition < needPosition.length)\r\n          return setTimeout(\r\n            () => input.setSelectionRange(currentPosition, currentPosition),\r\n            0\r\n          );\r\n      }\r\n\r\n      if (isDate) {\r\n        if (\r\n          currentPosition === input.value.length ||\r\n          currentPosition === input.value.length - 4\r\n        )\r\n          return;\r\n\r\n        let inputValue: string = input.value.replace(\"мес.\", \"\").trim();\r\n\r\n        inputValue = inputValue ? inputValue : \"0\";\r\n\r\n        if (!/^[0-9]*$/.test(inputValue)) {\r\n          dispatch(\r\n            toggleAlert({\r\n              isAlert: true,\r\n              isAuthAlert: false,\r\n              alertText: \"Вводите только числа!\",\r\n            })\r\n          );\r\n\r\n          return setIsAlert(true);\r\n        }\r\n\r\n        let currentValue: number = Number(inputValue);\r\n\r\n        let coordX =\r\n          Math.ceil(currentValue / 0.78) - 6 >= 100\r\n            ? 100\r\n            : Math.ceil(currentValue / 0.78) - 6;\r\n\r\n        setCoordX(coordX);\r\n\r\n        setExternalValue(`${currentValue > 84 ? 84 : currentValue} мес.`);\r\n\r\n        setTimeout(\r\n          () =>\r\n            input.setSelectionRange(\r\n              `${currentValue} мес.`.length - 5,\r\n              `${currentValue} мес.`.length - 5\r\n            ),\r\n          0\r\n        );\r\n      }\r\n    }\r\n\r\n    if (isRange) {\r\n      let coordX: number = Number(event.target.value);\r\n\r\n      setCoordX(coordX);\r\n\r\n      if (!isDate) {\r\n        const result: string = `${coordX === 0 ? 100000 : coordX * 400000}`\r\n          .split(\"\")\r\n          .reverse()\r\n          .map((char, id) => (id % 3 === 0 ? `${char} ` : char))\r\n          .reverse()\r\n          .join(\"\");\r\n\r\n        return setExternalValue(result + \"₽\");\r\n      }\r\n\r\n      if (isDate) {\r\n        if (coordX === 0) return setExternalValue(\"6 месяцев\");\r\n\r\n        let months: number | string = Math.ceil(coordX * 0.78) + 6;\r\n        let years: number | string = Math.floor(months / 12);\r\n\r\n        if (years === 0) {\r\n          years = \"\";\r\n          months = months + \" месяцев\";\r\n        } else {\r\n          months = months - years * 12;\r\n\r\n          months = months === 0 ? \"\" : `${months} месяцев`;\r\n\r\n          if (years === 1) years = `${years} год`;\r\n\r\n          if (+years < 5 && +years > 1) years = `${years} года`;\r\n\r\n          if (+years > 4 && +years <= 7) years = `${years} лет`;\r\n        }\r\n\r\n        return setExternalValue(`${years} ${months}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (rangeValue && isAlert) return setIsAlert(false);\r\n  }, [rangeValue]);\r\n\r\n  return (\r\n    <div className=\"range-input-wrapper\">\r\n      <input\r\n        type=\"range\"\r\n        name=\"range-input\"\r\n        id={`range-input-${preId}`}\r\n        className=\"range-input\"\r\n        min={min}\r\n        max={max}\r\n        value={rangeValue}\r\n        onChange={(event) => handleValueInput(event, true)}\r\n        ref={rangeRef}\r\n      />\r\n      <label htmlFor={`range-input-${preId}`}>{rangeText}</label>\r\n      <div className=\"value-wrapper\">\r\n        <input\r\n          type=\"text\"\r\n          className={isAlert ? \"range-value alert\" : \"range-value\"}\r\n          value={externalValue}\r\n          onClick={skipRuble}\r\n          onChange={(event) => handleValueInput(event, false)}\r\n        />\r\n      </div>\r\n      <div className=\"input-points\">\r\n        <ul>\r\n          <li className=\"point\">{pointBegin}</li>\r\n          <li className=\"point\">{pointMedium}</li>\r\n          <li className=\"point\">{pointEnd}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RangeInput;\r\n","import { FC, MouseEvent, useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleAlert } from \"../../store/features/alertSlice\";\r\n\r\nimport RangeInput from \"../UI/range-input/RangeInput\";\r\n\r\nimport \"./Calculator.scss\";\r\n\r\nconst Calculator: FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [sumValue, setSumValue] = useState<string>(\"100 000 ₽\");\r\n  const [term, setTerm] = useState<string>(\"6 месяцев\");\r\n  const [percent, setPercent] = useState<string>(\"13%\");\r\n\r\n  const [alertButton, setAlertButton] = useState<boolean>(false);\r\n\r\n  const handleSaveButton = (event: MouseEvent<HTMLDivElement>): void => {\r\n    event.preventDefault();\r\n\r\n    !alertButton &&\r\n      dispatch(\r\n        toggleAlert({\r\n          alertText: \"Сначала необходимо зайти в личный кабинет!\",\r\n          isAlert: true,\r\n          isAuthAlert: true,\r\n        })\r\n      );\r\n\r\n    setAlertButton(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (alertButton) {\r\n      setTimeout(() => {\r\n        setAlertButton(false);\r\n      }, 2000);\r\n    }\r\n  }, [alertButton]);\r\n\r\n  return (\r\n    <div className=\"calculator-wrapper\">\r\n      <div className=\"params-input-wrapper\">\r\n        <div className=\"calculator-title\">\r\n          <h2>Рассчитать сумму</h2>\r\n        </div>\r\n        <form className=\"params-form\">\r\n          <div className=\"params\">\r\n            <RangeInput\r\n              rangeText=\"Какую сумму желаете взять?\"\r\n              preId=\"sum\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              pointBegin=\"100 тыс ₽\"\r\n              pointMedium=\"20 млн ₽\"\r\n              pointEnd=\"40 млн ₽\"\r\n              isDate={false}\r\n              externalValue={sumValue}\r\n              setExternalValue={setSumValue}\r\n            />\r\n\r\n            <RangeInput\r\n              rangeText=\"На какой срок желаете взять?\"\r\n              preId=\"term\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              pointBegin=\"6 месяцев\"\r\n              pointMedium=\"3 года 9 месяцев\"\r\n              pointEnd=\"7 лет\"\r\n              isDate={true}\r\n              externalValue={term}\r\n              setExternalValue={setTerm}\r\n            />\r\n\r\n            <div className=\"percent-wrapper\">\r\n              <label htmlFor=\"percent\" className=\"percent-label\">\r\n                Выберите годовую ставку{\" \"}\r\n              </label>\r\n              <select\r\n                name=\"percent\"\r\n                id=\"percent\"\r\n                className=\"percent\"\r\n                value={percent}\r\n                onChange={(event) => setPercent(event.target.value)}\r\n              >\r\n                <option value=\"13\">13%</option>\r\n                <option value=\"18\">18%</option>\r\n                <option value=\"20\">20%</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"calculator-buttons\">\r\n            <div\r\n              className={\r\n                alertButton ? \"calculator-button alert\" : \"calculator-button\"\r\n              }\r\n              onClick={handleSaveButton}\r\n            >\r\n              <p>сохранить</p>\r\n            </div>\r\n\r\n            <div className=\"calculator-button\">\r\n              <p>рассчитать</p>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div className=\"params-output-wrapper\">\r\n        <div className=\"result-sum-wrapper\">\r\n          <div className=\"result-title\">\r\n            <h3>Ежемесячный платеж составляет</h3>\r\n          </div>\r\n          <div className=\"result-sum\">\r\n            <h4>120 000 ₽</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","export const testData: {\r\n  payOfInter: string;\r\n  principal: string;\r\n  perMonth: string;\r\n  repayment: string;\r\n  [key: string]: string;\r\n}[] = [\r\n  {\r\n    payOfInter: \"97 000 ₽\",\r\n    principal: \"320 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"8 000 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"94 430 ₽\",\r\n    principal: \"310 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"7 600 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"91 000 ₽\",\r\n    principal: \"306 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"7 000 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"76 000 ₽\",\r\n    principal: \"280 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"6 060 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"66 000 ₽\",\r\n    principal: \"240 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"5 000 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"27 000 ₽\",\r\n    principal: \"220 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"4 000 000 ₽\",\r\n  },\r\n\r\n  {\r\n    payOfInter: \"20 000 ₽\",\r\n    principal: \"320 000 ₽\",\r\n    perMonth: \"2400 ₽\",\r\n    repayment: \"3 000 000 ₽\",\r\n  },\r\n];\r\n","import { FC, useEffect, useState } from \"react\";\r\n\r\nimport { testData } from \"../testData\";\r\n\r\nimport \"./PaymentChart.scss\";\r\n\r\nimport {\r\n  Chart,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Filler,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nChart.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Filler,\r\n  Legend\r\n);\r\n\r\nconst PaymentChart: FC = () => {\r\n  const [xData, setXData] = useState<number[]>([]);\r\n  const [yData, setYData] = useState<number[]>([]);\r\n\r\n  const [yField, setYField] = useState<string>(\"payOfInter\");\r\n  const [fontSize, setFontSize] = useState<number>(14);\r\n  const [pointRadius, setPointRadius] = useState<number>(4);\r\n\r\n  const data = {\r\n    labels: xData,\r\n    datasets: [\r\n      {\r\n        label: \"График\",\r\n        data: yData,\r\n        fill: true,\r\n        borderWidth: 2,\r\n        // borderColor: \"rgba(21, 128, 195, 0.9)\",\r\n        borderColor: \"rgba(0, 170, 230,0.9)\",\r\n        backgroundColor: (context: any) => {\r\n          const chart = context.chart;\r\n          const ctx = chart.ctx;\r\n          const chartArea = chart.chartArea;\r\n\r\n          if (!chartArea) {\r\n            return null;\r\n          }\r\n\r\n          const gradient = ctx.createLinearGradient(\r\n            chartArea.left,\r\n            chartArea.top,\r\n            chartArea.left,\r\n            chartArea.bottom\r\n          );\r\n\r\n          gradient.addColorStop(0, \"rgba(0, 170, 230,1)\");\r\n          gradient.addColorStop(1, \"rgba(0, 170, 230,0.2)\");\r\n\r\n          return gradient;\r\n        },\r\n        tension: 0.4,\r\n        pointRadius: pointRadius,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        ticks: {\r\n          autoSkip: true,\r\n          maxRotation: 0,\r\n          font: {\r\n            size: fontSize,\r\n          },\r\n        },\r\n\r\n        border: {\r\n          color: \"rgba(0, 170, 230,1)\",\r\n        },\r\n\r\n        grid: {\r\n          color: \"rgba(0, 170, 230,0.1)\",\r\n        },\r\n      },\r\n\r\n      y: {\r\n        ticks: {\r\n          autoSkip: true,\r\n          maxRotation: 0,\r\n          font: {\r\n            size: fontSize,\r\n          },\r\n        },\r\n\r\n        border: {\r\n          color: \"rgba(0, 170, 230,1)\",\r\n        },\r\n\r\n        grid: {\r\n          color: \"rgba(0, 170, 230,0.1)\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (yField) {\r\n      let _xData = [];\r\n      let _yData = [];\r\n\r\n      for (let i = 0; i < testData.length; i++) {\r\n        _xData.push(Number(i) + 1);\r\n\r\n        let y = Number(testData[i][yField].replace(/\\s|₽/gi, \"\"));\r\n\r\n        _yData.push(y);\r\n      }\r\n\r\n      setXData(_xData);\r\n      setYData(_yData);\r\n    }\r\n  }, [yField]);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (window.innerWidth < 660 && window.innerWidth > 440) {\r\n        setFontSize(12);\r\n      }\r\n\r\n      if (window.innerWidth < 440) {\r\n        setFontSize(10);\r\n        setPointRadius(6);\r\n      }\r\n\r\n      if (window.innerWidth > 660) {\r\n        setFontSize(14);\r\n      }\r\n    };\r\n\r\n    handleResize();\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"payment-chart\">\r\n      <div className=\"select-wrapper\">\r\n        <label htmlFor=\"y-field\" className=\"select-label\">\r\n          Вы можете выбрать поле по которому будет построен график:{\" \"}\r\n        </label>\r\n        <select\r\n          name=\"y-field\"\r\n          id=\"y-field\"\r\n          className=\"y-field\"\r\n          value={yField}\r\n          onChange={(event) => setYField(event.target.value)}\r\n        >\r\n          <option value=\"payOfInter\">Оплата процентов</option>\r\n          <option value=\"principal\">Основной долг</option>\r\n          <option value=\"perMonth\">Платеж в месяц</option>\r\n          <option value=\"repayment\">Остаток погашения</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"line-chart-wrapper\">\r\n        <Line data={data} options={options} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentChart;\r\n","import { FC } from \"react\";\r\n\r\nimport \"./PaymentSchedule.scss\";\r\n\r\nimport { testData } from \"../../testData\";\r\n\r\nconst PaymentSchedule: FC = () => {\r\n  return (\r\n    <div className=\"payment-schedule\">\r\n      <table className=\"table\">\r\n        <thead className=\"thead\">\r\n          <tr>\r\n            <td>Год/месяц</td>\r\n            <td>Оплата процентов</td>\r\n            <td>Основной долг</td>\r\n            <td>Платеж в месяц</td>\r\n            <td>Остаток погашения</td>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody className=\"tbody\">\r\n          {testData.map((row, index) => (\r\n            <tr key={index}>\r\n              <td>{index + 1}</td>\r\n              <td>{row.payOfInter}</td>\r\n              <td>{row.principal}</td>\r\n              <td>{row.perMonth}</td>\r\n              <td>{row.repayment}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentSchedule;\r\n","import { FC } from \"react\";\r\n\r\nimport Calculator from \"../../components/calculator/Calculator\";\r\n\r\nimport \"./MainPage.scss\";\r\n\r\nimport PaymentChart from \"../../chart/PaymentChart\";\r\nimport PaymentSchedule from \"../../components/payment-schedule/PaymentSchedule\";\r\n\r\nconst MainPage: FC = () => {\r\n  return (\r\n    <main className=\"main-page\">\r\n      <header className=\"main-header\">\r\n        <div className=\"main-title\">\r\n          <h1>Кредитный калькулятор Т1</h1>\r\n        </div>\r\n        <div className=\"main-description\">\r\n          <p>\r\n            Наш продукт - это кредитный трекер открытых позиций и калькулятор,\r\n            для физических лиц. Приложение рассчитывает графики платежей по\r\n            кредиту, и сохраняет их для авторизованных пользователей. Данные\r\n            можно посмотреть в личном кабинете приложения, или получить в виде\r\n            JSON, отправив запрос с другого сервиса. Мы имеем частично открытое\r\n            api, предоставляющее возможность любому желающему интегрировать наш\r\n            сервис в свое приложение.\r\n          </p>\r\n        </div>\r\n      </header>\r\n      <Calculator />\r\n      <PaymentChart />\r\n      <PaymentSchedule />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n"],"names":["_ref","rangeText","preId","min","max","defaultValue","pointBegin","pointMedium","pointEnd","isDate","externalValue","setExternalValue","dispatch","useDispatch","rangeRef","useRef","rangeValue","setRangeValue","useState","isAlert","setIsAlert","setCoordX","coordX","current","style","background","handleValueInput","event","isRange","input","target","currentPosition","selectionStart","currentValue","needPosition","value","replace","inputValue","split","map","char","trim","join","test","toggleAlert","isAuthAlert","alertText","Number","Math","ceil","result","reverse","id","length","setTimeout","setSelectionRange","months","years","floor","useEffect","_jsxs","className","children","_jsx","type","name","onChange","ref","htmlFor","onClick","startPosition","reduce","acc","index","arr","Calculator","sumValue","setSumValue","term","setTerm","percent","setPercent","alertButton","setAlertButton","RangeInput","preventDefault","testData","payOfInter","principal","perMonth","repayment","Chart","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Filler","Legend","PaymentChart","xData","setXData","yData","setYData","yField","setYField","fontSize","setFontSize","pointRadius","setPointRadius","data","labels","datasets","label","fill","borderWidth","borderColor","backgroundColor","context","chart","ctx","chartArea","gradient","createLinearGradient","left","top","bottom","addColorStop","tension","options","plugins","legend","display","scales","x","ticks","autoSkip","maxRotation","font","size","border","color","grid","y","_xData","_yData","i","push","handleResize","window","innerWidth","addEventListener","removeEventListener","Line","PaymentSchedule","row","MainPage"],"sourceRoot":""}